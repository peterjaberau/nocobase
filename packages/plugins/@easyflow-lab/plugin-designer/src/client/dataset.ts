
const baseComponents = {
  codeEditor: {
    /* data */
    value: '',
    exposingData: {},
    segments: [
      {
        success: true,
        value: '{{}}',
      },
    ],

    /* props */
    codeText: 'the amount equal {{input1.value}}.',
    showLineNumbers: false,
    codeType: undefined,
    bordered: true,
    disabled: false,
    placeholder: '"{{button1.text}}"',
    styleName: 'medium',

    /* methods */
    onChange: 'Function',

    /* extension tooltip */
    cardTitle: 'card title',
    cardContent: 'card content',
    placement: 'bottom',
    hasError: false,

    /* extension autocompletion */
    enableClickCompName: false,
    enableExposingDataAutoCompletion: true,

    /* extension popover */
    label: 'CSS Class name',
  },
};

export const dataStore = {
  root: {
    config: {
      openLeftPanel: true,
      mode: 'edit',
      openBottomPanel: true,
      openRightPanel: true,
      openDebugger: false,
      scale: 100,
      selectedComponents: [],
      selectedAction: {
        actionID: 'ILAgx4p1y7ZR',
        uid: 'b7035cf7-550b-4283-b314-7d6c72a72686',
        teamID: 'ILAgx4p1C7CH',
        resourceID: 'ILAgx4p1C7mZ',
        displayName: 'textToImageEdit',
        actionType: 'restapi',
        isVirtualResource: false,
        content: {
          body: {
            content:
              '{\n    "model": "dall-e-3",\n  "prompt": "{{textarea3.value}}",\n    "n": 1,\n    "size": "1024x1024"\n  }',
            type: 'json',
          },
          bodyType: 'raw',
          cookies: [
            {
              key: '',
              value: '',
            },
          ],
          headers: [
            {
              key: '',
              value: '',
            },
          ],
          method: 'POST',
          url: 'images/generations',
          urlParams: [
            {
              key: '',
              value: '',
            },
          ],
        },
        transformer: {
          enable: false,
          rawData: '',
        },
        triggerMode: 'manually',
        config: {
          public: false,
          isVirtualResource: false,
          advancedConfig: {
            runtime: 'none',
            pages: [],
            delayWhenLoaded: '',
            displayLoadingPage: false,
            isPeriodically: false,
            periodInterval: '',
            mock: '',
          },
          mockConfig: {
            enabled: false,
            mockData: '',
            enableForReleasedApp: false,
          },
          tutorialLink: '',
        },
        createdAt: '2024-10-17T05:01:10.823195Z',
        createdBy: 'ILAdx4p1C7Jf',
        updatedAt: '2024-10-17T05:02:29.079153Z',
        updatedBy: 'ILAdx4p1C7Jf',
      },
      cachedAction: {
        actionID: 'ILAgx4p1y7ZR',
        uid: 'b7035cf7-550b-4283-b314-7d6c72a72686',
        teamID: 'ILAgx4p1C7CH',
        resourceID: 'ILAgx4p1C7mZ',
        displayName: 'textToImageEdit',
        actionType: 'restapi',
        isVirtualResource: false,
        content: {
          body: {
            content:
              '{\n    "model": "dall-e-3",\n  "prompt": "{{textarea3.value}}",\n    "n": 1,\n    "size": "1024x1024"\n  }',
            type: 'json',
          },
          bodyType: 'raw',
          cookies: [
            {
              key: '',
              value: '',
            },
          ],
          headers: [
            {
              key: '',
              value: '',
            },
          ],
          method: 'POST',
          url: 'images/generations',
          urlParams: [
            {
              key: '',
              value: '',
            },
          ],
        },
        transformer: {
          enable: false,
          rawData: '',
        },
        triggerMode: 'manually',
        config: {
          public: false,
          isVirtualResource: false,
          advancedConfig: {
            runtime: 'none',
            pages: [],
            delayWhenLoaded: '',
            displayLoadingPage: false,
            isPeriodically: false,
            periodInterval: '',
            mock: '',
          },
          mockConfig: {
            enabled: false,
            mockData: '',
            enableForReleasedApp: false,
          },
          tutorialLink: '',
        },
        createdAt: '2024-10-17T05:01:10.823195Z',
        createdBy: 'ILAdx4p1C7Jf',
        updatedAt: '2024-10-17T05:02:29.079153Z',
        updatedBy: 'ILAdx4p1C7Jf',
      },
      showDot: false,
      expandedKeys: [],
      canvasHeight: 280,
      canvasWidth: 1105,
      isOnline: true,
      hoveredComponents: [],
      expandedWidgets: {},
      wsStatus: {
        DASHBOARD: 'INIT',
        APP: 'CONNECTED',
        APP_BINARY: 'CONNECTED',
        AI_AGENT: 'INIT',
      },
      draggingComponentIDs: [],
      resizingComponentIDs: [],
    },
    currentApp: {
      components: {
        root: {
          version: 0,
          displayName: 'root',
          parentNode: '',
          showName: 'root',
          childrenNode: ['page1'],
          type: 'DOT_PANEL',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 0,
          x: -1,
          y: -1,
          z: 0,
          props: {
            currentPageIndex: 0,
            pageSortedKey: ['page1'],
            viewportSizeType: 'fluid',
          },
        },
        page1: {
          version: 0,
          displayName: 'page1',
          parentNode: 'root',
          showName: 'page',
          childrenNode: ['bodySection1', 'modalSection1'],
          type: 'PAGE_NODE',
          containerType: 'EDITOR_PAGE_SQUARE',
          h: 0,
          w: 0,
          minH: 0,
          minW: 0,
          x: -1,
          y: -1,
          z: 0,
          props: {
            bodyColumns: 32,
            bottomHeight: 0,
            canvasSize: 'auto',
            canvasWidth: 100,
            footerColumns: 32,
            hasFooter: false,
            hasHeader: false,
            hasLeft: false,
            hasRight: false,
            headerColumns: 32,
            isFooterFixed: true,
            isHeaderFixed: true,
            isLeftFixed: true,
            isRightFixed: true,
            layout: 'default',
            leftColumns: 8,
            leftPosition: 'NONE',
            leftWidth: 0,
            rightColumns: 8,
            rightPosition: 'NONE',
            rightWidth: 0,
            showLeftFoldIcon: false,
            showRightFoldIcon: false,
            topHeight: 0,
          },
        },
        bodySection1: {
          version: 0,
          displayName: 'bodySection1',
          parentNode: 'page1',
          showName: 'bodySection',
          childrenNode: ['bodySection1-bodySectionContainer1'],
          type: 'SECTION_NODE',
          containerType: 'EDITOR_LAYOUT_SQUARE',
          h: 0,
          w: 0,
          minH: 0,
          minW: 0,
          x: -1,
          y: -1,
          z: 0,
          props: {
            currentViewIndex: 0,
            defaultViewKey: 'sub-page1',
            sectionViewConfigs: [
              {
                id: 'a1b12fc6-00cc-479c-83e8-4ae6ab9fdbc3',
                key: 'sub-page1',
                path: 'sub-page1',
                viewDisplayName: 'bodySection1-bodySectionContainer1',
              },
            ],
            style: {
              background: 'white',
              padding: {
                mode: 'all',
                size: '24',
              },
            },
            viewSortedKey: ['bodySection1-bodySectionContainer1'],
          },
        },
        'bodySection1-bodySectionContainer1': {
          version: 0,
          displayName: 'bodySection1-bodySectionContainer1',
          parentNode: 'bodySection1',
          showName: 'bodySection1-bodySectionContainer1',
          childrenNode: ['container3', 'container4', 'select1', 'button3', 'input1'],
          type: 'CONTAINER_NODE',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 0,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        container3: {
          version: 0,
          displayName: 'container3',
          parentNode: 'bodySection1-bodySectionContainer1',
          showName: 'container',
          childrenNode: ['canvas12', 'canvas13', 'canvas14'],
          type: 'CONTAINER_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 28,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: 'blue',
            borderWidth: '8px',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            padding: {
              mode: 'all',
              size: '0',
            },
            radius: '8',
            resizeDirection: 'HORIZONTAL',
            shadow: 'none',
            viewList: [
              {
                id: '3b45741e-05a1-409f-b435-9cfc8bda623a',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '4b7f04ca-7704-467a-b14d-f0bb37c54fc7',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '976fb6bd-f8dc-4dc0-b4e4-1edff90e466f',
                key: 'View 3',
                label: 'View 3',
              },
            ],
          },
        },
        canvas12: {
          version: 0,
          displayName: 'canvas12',
          parentNode: 'container3',
          showName: 'canvas',
          childrenNode: ['text4', 'image6', 'container5'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text4: {
          version: 0,
          displayName: 'text4',
          parentNode: 'canvas12',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 11,
          w: 15,
          minH: 3,
          minW: 1,
          x: 1,
          y: 8,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            borderWidth: '32px',
            colorScheme: 'white',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '32px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value: '# Content management',
            verticalAlign: 'center',
          },
        },
        image6: {
          version: 0,
          displayName: 'image6',
          parentNode: 'canvas12',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 26,
          w: 11,
          minH: 3,
          minW: 1,
          x: 21,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '0px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/5971e713-92bc-43ad-b534-7245df408ff6',
            imageSrcByUpload: 'https://cloud-api.illacloud.com/drive/f/5971e713-92bc-43ad-b534-7245df408ff6',
            objectFit: 'contain',
          },
        },
        container5: {
          version: 0,
          displayName: 'container5',
          parentNode: 'canvas12',
          showName: 'container',
          childrenNode: ['canvas22'],
          type: 'CONTAINER_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 6,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 15,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: 'blue',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'openUrl',
                eventType: 'click',
                id: 'events-6e98bb93-97c7-4271-ac11-5e6cfd3e39fb',
                newTab: true,
                url: 'https://builder.illacloud.com/ILLADemoInternal/deploy/app/ILAcx4p1C7NY',
              },
            ],
            padding: {
              mode: 'all',
              size: '0',
            },
            radius: '4px',
            resizeDirection: 'HORIZONTAL',
            shadow: 'none',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
            ],
          },
        },
        canvas22: {
          version: 0,
          displayName: 'canvas22',
          parentNode: 'container5',
          showName: 'canvas',
          childrenNode: ['text19'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text19: {
          version: 0,
          displayName: 'text19',
          parentNode: 'canvas22',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 7,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'white',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value:
              'We use this product to manage the content displayed on the client side. Click here to try the demo. ',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        canvas13: {
          version: 0,
          displayName: 'canvas13',
          parentNode: 'container3',
          showName: 'canvas',
          childrenNode: [],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        canvas14: {
          version: 0,
          displayName: 'canvas14',
          parentNode: 'container3',
          showName: 'canvas',
          childrenNode: [],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        container4: {
          version: 0,
          displayName: 'container4',
          parentNode: 'bodySection1-bodySectionContainer1',
          showName: 'container',
          childrenNode: ['canvas11', 'canvas16', 'canvas17'],
          type: 'CONTAINER_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 55,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 37,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            borderColor: '#e5e6ebff',
            borderWidth: '1px',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            padding: {
              mode: 'partial',
              size: '8 24 16 24',
            },
            radius: '8',
            resizeDirection: 'HORIZONTAL',
            shadow: 'small',
            viewList: [
              {
                id: 'b85d5ce5-a075-4ad7-a839-1cd963d3bf24',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: 'af846d65-c08a-4b76-95a0-51eff8118485',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '92748ed4-d289-4a0b-a0d5-aa797d262b16',
                key: 'View 3',
                label: 'View 3',
              },
            ],
          },
        },
        canvas11: {
          version: 0,
          displayName: 'canvas11',
          parentNode: 'container4',
          showName: 'canvas',
          childrenNode: ['text7', 'dataGrid1'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text7: {
          version: 0,
          displayName: 'text7',
          parentNode: 'canvas11',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 10,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '## Content list',
            verticalAlign: 'center',
          },
        },
        dataGrid1: {
          version: 0,
          displayName: 'dataGrid1',
          parentNode: 'canvas11',
          showName: 'dataGrid',
          childrenNode: [],
          type: 'DATA_GRID_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 73,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [
              'dataSourceJS',
              'columns[5].events[0].url',
              'columns[2].width',
              'columns[2].imageSrc',
              'columns[2].label',
              'columns[2].labelCaption',
              'loading',
              'columns[3].width',
            ],
            columnVisibilityModel: {
              id: false,
              image: false,
              label: false,
              url: true,
            },
            columns: [
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'id',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'id',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'label',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'label',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                columnType: 'avatar',
                description: '',
                disableReorder: false,
                field: 'description',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'Information',
                hideable: true,
                imageSrc: '{{dataGrid1.dataSourceJS.map((currentRow) => (currentRow.image))}}',
                isCalc: true,
                label: '{{dataGrid1.dataSourceJS.map((currentRow) => (currentRow.label))}}',
                labelCaption: '{{dataGrid1.dataSourceJS.map((currentRow) => (currentRow.description))}}',
                pinnable: true,
                resizable: true,
                sortable: true,
                width: '{{ 700 }}',
              },
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'tags',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'tags',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: '{{ 240 }}',
              },
              {
                aggregable: true,
                columnType: 'image',
                description: '',
                disableReorder: false,
                field: 'image',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'cover',
                hideable: true,
                isCalc: true,
                objectFit: 'container',
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                colorScheme: 'grayBlue',
                columnType: 'button',
                description: '',
                disableReorder: false,
                events: [
                  {
                    actionType: 'openUrl',
                    eventType: 'click',
                    id: 'events-a1ad75fe-ff86-4a37-ade4-be5a8c7e196f',
                    newTab: true,
                    url: '{{dataGrid1.selectedRows[0].url}}',
                  },
                ],
                field: 'url',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'url',
                hideable: true,
                isCalc: true,
                mappedValue: 'Detail',
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                buttonGroup: [
                  {
                    colorScheme: 'grayBlue',
                    events: [
                      {
                        actionType: 'widget',
                        eventType: 'click',
                        id: 'events-51e1bef3-d0ca-4766-93c6-495573a1b4d9',
                        widgetID: 'modal3',
                        widgetMethod: 'openModal',
                      },
                    ],
                    id: '8080240c-d3d9-4376-8da7-b5b10d957d22',
                    mappedValue: 'Edit',
                  },
                  {
                    colorScheme: 'grayBlue',
                    events: [
                      {
                        actionType: 'widget',
                        eventType: 'click',
                        id: 'events-9bda0bc7-2742-46bc-b834-44c9707df499',
                        widgetID: 'modal1',
                        widgetMethod: 'openModal',
                      },
                    ],
                    id: '65b7e523-01ab-429f-b002-1711b429545d',
                    mappedValue: 'Delete',
                  },
                ],
                columnType: 'buttongroup',
                description: '',
                disableReorder: false,
                field: '67eab4ab-1c13-4412-9396-f2df36cefc80',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'Operation',
                hideable: true,
                isCalc: false,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
            ],
            dataSource: [],
            dataSourceJS: '{{listData.data}}',
            dataSourceMode: 'dynamic',
            enablePagination: false,
            excludeHiddenColumns: true,
            loading: '{{listData.isRunning}}',
            loadingDynamic: true,
            rowSelection: true,
            sortOrder: 'default',
          },
        },
        canvas16: {
          version: 0,
          displayName: 'canvas16',
          parentNode: 'container4',
          showName: 'canvas',
          childrenNode: [],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        canvas17: {
          version: 0,
          displayName: 'canvas17',
          parentNode: 'container4',
          showName: 'canvas',
          childrenNode: [],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        select1: {
          version: 0,
          displayName: 'select1',
          parentNode: 'bodySection1-bodySectionContainer1',
          showName: 'select',
          childrenNode: [],
          type: 'SELECT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 9,
          minH: 3,
          minW: 1,
          x: 0,
          y: 30,
          z: 0,
          props: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'mappedOption.labels',
              'mappedOption.values',
              'dataSources',
            ],
            colorScheme: 'blue',
            dataSources: '{{tags.value}}',
            formDataKey: '{{select1.displayName}}',
            hidden: false,
            label: 'Page',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{15}}',
            manualOptions: [
              {
                id: 'option-692ed38f-a67f-4a59-ba20-a914dd32bd76',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-5324bca0-3b09-415f-9533-3966ead13b84',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-faeee67d-bfde-4327-b04a-f4cb80adffc6',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {
              labels: '{{select1.dataSources.map((item) => ( item))}}',
              values: '{{select1.dataSources.map((item) => ( item))}}',
            },
            optionConfigureMode: 'dynamic',
            placeholder: 'Select a tag',
            showClear: true,
            value: '',
          },
        },
        button3: {
          version: 0,
          displayName: 'button3',
          parentNode: 'bodySection1-bodySectionContainer1',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 7,
          minH: 3,
          minW: 1,
          x: 25,
          y: 30,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'widget',
                eventType: 'click',
                id: 'events-a8868d43-8f32-455e-8a2d-19c2f39ff598',
                widgetID: 'modal2',
                widgetMethod: 'openModal',
              },
            ],
            hidden: false,
            text: '+ Add new',
            variant: 'fill',
          },
        },
        input1: {
          version: 0,
          displayName: 'input1',
          parentNode: 'bodySection1-bodySectionContainer1',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 14,
          minH: 3,
          minW: 1,
          x: 10,
          y: 30,
          z: 0,
          props: {
            $dynamicAttrPaths: ['labelWidth', 'formDataKey', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input1.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{15}}',
            placeholder: 'Search',
            showVisibleButton: '{{true}}',
            type: 'search',
            defaultValue: '',
          },
        },
        modalSection1: {
          version: 0,
          displayName: 'modalSection1',
          parentNode: 'page1',
          showName: 'modalSection',
          childrenNode: ['modal2', 'modal1', 'modal3'],
          type: 'MODAL_SECTION_NODE',
          containerType: 'EDITOR_LAYOUT_SQUARE',
          h: 0,
          w: 0,
          minH: 0,
          minW: 0,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        modal2: {
          version: 0,
          displayName: 'modal2',
          parentNode: 'modalSection1',
          showName: 'modal',
          childrenNode: ['canvas4', 'canvas5', 'canvas6'],
          type: 'MODAL_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 68,
          w: 27,
          minH: 3,
          minW: 1,
          x: 0,
          y: 55,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: 9,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
          },
        },
        canvas4: {
          version: 0,
          displayName: 'canvas4',
          parentNode: 'modal2',
          showName: 'canvas',
          childrenNode: ['text2'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text2: {
          version: 0,
          displayName: 'text2',
          parentNode: 'canvas4',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 5,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Modal',
            verticalAlign: 'center',
          },
        },
        canvas5: {
          version: 0,
          displayName: 'canvas5',
          parentNode: 'modal2',
          showName: 'canvas',
          childrenNode: [
            'input5',
            'input6',
            'text3',
            'icon1',
            'input2',
            'multiselect1',
            'input4',
            'upload1',
            'button8',
            'button7',
            'text5',
            'text6',
            'container1',
          ],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        input5: {
          version: 0,
          displayName: 'input5',
          parentNode: 'canvas5',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 20,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input5.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        input6: {
          version: 0,
          displayName: 'input6',
          parentNode: 'canvas5',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 38,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input6.displayName}}',
            hidden: false,
            label: 'URL',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        text3: {
          version: 0,
          displayName: 'text3',
          parentNode: 'canvas5',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 10,
          w: 6,
          minH: 3,
          minW: 1,
          x: 1,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Add new',
            verticalAlign: 'center',
          },
        },
        icon1: {
          version: 0,
          displayName: 'icon1',
          parentNode: 'canvas5',
          showName: 'icon',
          childrenNode: [],
          type: 'ICON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 4,
          w: 1,
          minH: 3,
          minW: 1,
          x: 30,
          y: 3,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: '{{(async function (){container1.setCurrentViewKey("View 1");\nmodal2.closeModal();\n\n})()}}',
              },
            ],
            hidden: false,
            iconName: 'BsX',
          },
        },
        input2: {
          version: 0,
          displayName: 'input2',
          parentNode: 'canvas5',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 33,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input2.displayName}}',
            hidden: false,
            label: 'Description',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        multiselect1: {
          version: 0,
          displayName: 'multiselect1',
          parentNode: 'canvas5',
          showName: 'multiselect',
          childrenNode: [],
          type: 'MULTISELECT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 46,
          z: 0,
          props: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'dataSources',
              'mappedOption.labels',
              'mappedOption.values',
            ],
            colorScheme: 'blue',
            dataSources: '{{tags.value}}',
            dynamicHeight: 'auto',
            formDataKey: '{{multiselect1.displayName}}',
            hidden: false,
            label: 'Tags',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            manualOptions: [
              {
                id: 'option-ede99dc1-f90c-41d1-b1c4-9b3b697d02af',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-d03acb01-e5b6-4d2b-b054-d398181fbf52',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-f0136676-4926-4b6f-bd05-30c53e7c5001',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {
              labels: '{{multiselect1.dataSources.map((item) => ( item))}}',
              values: '{{multiselect1.dataSources.map((item) => ( item))}}',
            },
            optionConfigureMode: 'dynamic',
            placeholder: 'Choose tags',
            resizeDirection: 'HORIZONTAL',
            showClear: true,
          },
        },
        input4: {
          version: 0,
          displayName: 'input4',
          parentNode: 'canvas5',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 15,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input4.displayName}}',
            hidden: false,
            label: 'Cover source',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        upload1: {
          version: 0,
          displayName: 'upload1',
          parentNode: 'canvas5',
          showName: 'upload',
          childrenNode: [],
          type: 'UPLOAD_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 4,
          minH: 3,
          minW: 1,
          x: 11,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'loading', 'events[0].script'],
            appendFiles: false,
            buttonText: 'Upload',
            colorScheme: 'blue',
            dropText: '选择或拖放一个文件',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'script',
                eventType: 'change',
                id: 'events-60f3ed18-fd39-4835-a2d5-2909cf45459b',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst upload = await uploadFiles.trigger();\n\nconst list = await listFiles.trigger();\n\ninput4.setValue(list[0].tinyURL);\n\n\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n})()}}',
              },
            ],
            fileType: '',
            formDataKey: '{{upload1.displayName}}',
            hidden: false,
            loading: '{{uploadFiles.isRunning||listFiles.isRuning}}',
            selectionType: 'single',
            showFileList: false,
            sizeType: 'mb',
            type: 'button',
            variant: 'fill',
            verticalAlign: 'center',
          },
        },
        button8: {
          version: 0,
          displayName: 'button8',
          parentNode: 'canvas5',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 3,
          minH: 3,
          minW: 1,
          x: 15,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: '{{(async function (){container1.setCurrentViewKey("View 2");})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '',
            text: '🤖️',
            variant: 'fill',
          },
        },
        button7: {
          version: 0,
          displayName: 'button7',
          parentNode: 'canvas5',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 3,
          minH: 3,
          minW: 1,
          x: 15,
          y: 28,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: '{{(async function (){container1.setCurrentViewKey("View 3");})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '',
            text: '🤖️',
            variant: 'fill',
          },
        },
        text5: {
          version: 0,
          displayName: 'text5',
          parentNode: 'canvas5',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 10,
          minH: 3,
          minW: 1,
          x: 1,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Cover source',
            verticalAlign: 'center',
            weight: 500,
          },
        },
        text6: {
          version: 0,
          displayName: 'text6',
          parentNode: 'canvas5',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 10,
          minH: 3,
          minW: 1,
          x: 1,
          y: 28,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Description',
            verticalAlign: 'center',
            weight: 500,
          },
        },
        container1: {
          version: 0,
          displayName: 'container1',
          parentNode: 'canvas5',
          showName: 'container',
          childrenNode: ['canvas7', 'canvas8', 'canvas9'],
          type: 'CONTAINER_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 44,
          w: 12,
          minH: 3,
          minW: 1,
          x: 19,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'fixed',
            padding: {
              mode: 'all',
              size: '24',
            },
            radius: '4px',
            resizeDirection: 'ALL',
            shadow: 'small',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '2ff81ae9-b80d-49c9-bb6d-fc6e5119957f',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '5d53f4b4-6262-4f3f-a8b0-33507ea6a2e8',
                key: 'View 3',
                label: 'View 3',
              },
            ],
          },
        },
        canvas7: {
          version: 0,
          displayName: 'canvas7',
          parentNode: 'container1',
          showName: 'canvas',
          childrenNode: ['image2'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        image2: {
          version: 0,
          displayName: 'image2',
          parentNode: 'canvas7',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 36,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'cover',
          },
        },
        canvas8: {
          version: 0,
          displayName: 'canvas8',
          parentNode: 'container1',
          showName: 'canvas',
          childrenNode: ['textarea1', 'button9', 'image3', 'text8'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        textarea1: {
          version: 0,
          displayName: 'textarea1',
          parentNode: 'canvas8',
          showName: 'textarea',
          childrenNode: [],
          type: 'TEXTAREA_INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 11,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: '{{textarea1.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{33}}',
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '',
          },
        },
        button9: {
          version: 0,
          displayName: 'button9',
          parentNode: 'canvas8',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 11,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\nconst result = await textToImage.trigger();\ninput4.setValue(result.data[0].url);\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n  }\n\n\n})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '{{textToImage.isRunning}}',
            text: '🤖️ Generate',
            variant: 'fill',
          },
        },
        image3: {
          version: 0,
          displayName: 'image3',
          parentNode: 'canvas8',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 15,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 21,
          z: 0,
          props: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc:
              '{{textToImage.data===undefined||textToImage.data.data[0].url===undefined?"https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3":textToImage.data.data[0].url}}',
            imageSrcByURL:
              '{{textToImage.data===undefined||textToImage.data.data[0].url===undefined?"https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3":textToImage.data.data[0].url}}',
            objectFit: 'contain',
          },
        },
        text8: {
          version: 0,
          displayName: 'text8',
          parentNode: 'canvas8',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 4,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 17,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: '#8a8a8aff',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'center',
            resizeDirection: 'ALL',
            value: 'Preview',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        canvas9: {
          version: 0,
          displayName: 'canvas9',
          parentNode: 'container1',
          showName: 'canvas',
          childrenNode: ['textarea2', 'button10', 'text14'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        textarea2: {
          version: 0,
          displayName: 'textarea2',
          parentNode: 'canvas9',
          showName: 'textarea',
          childrenNode: [],
          type: 'TEXTAREA_INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 11,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'value'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: '{{textarea2.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{33}}',
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '{{input5.value}}',
          },
        },
        button10: {
          version: 0,
          displayName: 'button10',
          parentNode: 'canvas9',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 16,
          minH: 3,
          minW: 1,
          x: 9,
          y: 11,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  '{{(async function (){const result = await description.trigger();\n\ninput2.setValue(result[0].content);})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '{{description.isRunning}}',
            text: '🤖️ Generate',
            variant: 'fill',
          },
        },
        text14: {
          version: 0,
          displayName: 'text14',
          parentNode: 'canvas9',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 16,
          z: 0,
          props: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value: '{{description.data[0].content}}',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        canvas6: {
          version: 0,
          displayName: 'canvas6',
          parentNode: 'modal2',
          showName: 'canvas',
          childrenNode: ['button4'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        button4: {
          version: 0,
          displayName: 'button4',
          parentNode: 'canvas6',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 6,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 1,
          z: 0,
          props: {
            $dynamicAttrPaths: ['loading', 'events[0].script'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'cf57950d-01c9-46c9-b099-62ebe74d77de',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result = await insertData.trigger();\n\nconst result1 = await listData.trigger();\n\ncontainer1.setCurrentViewKey("View 1");\nmodal2.closeModal();\n\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n\n})()}}',
              },
            ],
            hidden: false,
            loading: '{{insertData.isRunning||listData.isRunning}}',
            text: 'Add',
            variant: 'fill',
          },
        },
        modal1: {
          version: 0,
          displayName: 'modal1',
          parentNode: 'modalSection1',
          showName: 'modal',
          childrenNode: ['canvas1', 'canvas2', 'canvas3'],
          type: 'MODAL_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 55,
          w: 24,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: -3,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
          },
        },
        canvas1: {
          version: 0,
          displayName: 'canvas1',
          parentNode: 'modal1',
          showName: 'canvas',
          childrenNode: [],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        canvas2: {
          version: 0,
          displayName: 'canvas2',
          parentNode: 'modal1',
          showName: 'canvas',
          childrenNode: ['text9', 'text12', 'text13', 'image1', 'icon3', 'text18'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text9: {
          version: 0,
          displayName: 'text9',
          parentNode: 'canvas2',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 31,
          minH: 3,
          minW: 1,
          x: 1,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '**Are you sure you want to delete this item?**',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        text12: {
          version: 0,
          displayName: 'text12',
          parentNode: 'canvas2',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 31,
          minH: 3,
          minW: 1,
          x: 1,
          y: 37,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'After confirming the deletion, it will not be recoverable. Please confirm.',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        text13: {
          version: 0,
          displayName: 'text13',
          parentNode: 'canvas2',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 31,
          minH: 3,
          minW: 1,
          x: 1,
          y: 15,
          z: 0,
          props: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '{{dataGrid1.selectedRows[0].label}}',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        image1: {
          version: 0,
          displayName: 'image1',
          parentNode: 'canvas2',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 17,
          w: 7,
          minH: 3,
          minW: 1,
          x: 1,
          y: 20,
          z: 0,
          props: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '0px',
            imageSrc: '{{dataGrid1.selectedRows[0].image}}',
            imageSrcByURL: '{{dataGrid1.selectedRows[0].image}}',
            objectFit: 'cover',
          },
        },
        icon3: {
          version: 0,
          displayName: 'icon3',
          parentNode: 'canvas2',
          showName: 'icon',
          childrenNode: [],
          type: 'ICON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 4,
          w: 2,
          minH: 3,
          minW: 1,
          x: 29,
          y: 2,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'tooltipText'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: '{{(async function (){modal1.closeModal();\n\n})()}}',
              },
            ],
            hidden: false,
            iconName: 'BsX',
            tooltipText: '{{}}',
          },
        },
        text18: {
          version: 0,
          displayName: 'text18',
          parentNode: 'canvas2',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 10,
          w: 14,
          minH: 3,
          minW: 1,
          x: 1,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Delete',
            verticalAlign: 'center',
          },
        },
        canvas3: {
          version: 0,
          displayName: 'canvas3',
          parentNode: 'modal1',
          showName: 'canvas',
          childrenNode: ['button1'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        button1: {
          version: 0,
          displayName: 'button1',
          parentNode: 'canvas3',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 10,
          minH: 3,
          minW: 1,
          x: 11,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: ['loading', 'events[0].script'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: '29df3f29-8e3e-477f-8495-282a56ac5e8f',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result1 = await deleteData.trigger();\nconst result2 = await listData.trigger();\nmodal1.closeModal();\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n})()}}',
              },
            ],
            hidden: false,
            loading: '{{deleteData.isRunning||listData.isRunning}}',
            text: 'Delete',
            variant: 'fill',
          },
        },
        modal3: {
          version: 0,
          displayName: 'modal3',
          parentNode: 'modalSection1',
          showName: 'modal',
          childrenNode: ['canvas10', 'canvas15', 'canvas21'],
          type: 'MODAL_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 68,
          w: 27,
          minH: 3,
          minW: 1,
          x: 0,
          y: 123,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: 9,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
          },
        },
        canvas10: {
          version: 0,
          displayName: 'canvas10',
          parentNode: 'modal3',
          showName: 'canvas',
          childrenNode: ['text1'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        text1: {
          version: 0,
          displayName: 'text1',
          parentNode: 'canvas10',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 5,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Modal',
            verticalAlign: 'center',
          },
        },
        canvas15: {
          version: 0,
          displayName: 'canvas15',
          parentNode: 'modal3',
          showName: 'canvas',
          childrenNode: [
            'input3',
            'input7',
            'text10',
            'icon2',
            'input8',
            'multiselect2',
            'input9',
            'upload2',
            'button5',
            'button6',
            'text11',
            'text15',
            'container2',
          ],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        input3: {
          version: 0,
          displayName: 'input3',
          parentNode: 'canvas15',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 20,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input3.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        input7: {
          version: 0,
          displayName: 'input7',
          parentNode: 'canvas15',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 38,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input7.displayName}}',
            hidden: false,
            label: 'URL',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        text10: {
          version: 0,
          displayName: 'text10',
          parentNode: 'canvas15',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 10,
          w: 6,
          minH: 3,
          minW: 1,
          x: 1,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Edit',
            verticalAlign: 'center',
          },
        },
        icon2: {
          version: 0,
          displayName: 'icon2',
          parentNode: 'canvas15',
          showName: 'icon',
          childrenNode: [],
          type: 'ICON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 4,
          w: 1,
          minH: 3,
          minW: 1,
          x: 30,
          y: 3,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: '{{(async function (){container2.setCurrentViewKey("View 1");\nmodal3.closeModal();\n\n})()}}',
              },
            ],
            hidden: false,
            iconName: 'BsX',
          },
        },
        input8: {
          version: 0,
          displayName: 'input8',
          parentNode: 'canvas15',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 33,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input8.displayName}}',
            hidden: false,
            label: 'Description',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        multiselect2: {
          version: 0,
          displayName: 'multiselect2',
          parentNode: 'canvas15',
          showName: 'multiselect',
          childrenNode: [],
          type: 'MULTISELECT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 8,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 46,
          z: 0,
          props: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'dataSources',
              'mappedOption.labels',
              'mappedOption.values',
            ],
            colorScheme: 'blue',
            dataSources: '{{tags.value}}',
            dynamicHeight: 'auto',
            formDataKey: '{{multiselect2.displayName}}',
            hidden: false,
            label: 'Tags',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: '{{33}}',
            manualOptions: [
              {
                id: 'option-ede99dc1-f90c-41d1-b1c4-9b3b697d02af',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-d03acb01-e5b6-4d2b-b054-d398181fbf52',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-f0136676-4926-4b6f-bd05-30c53e7c5001',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {
              labels: '{{multiselect2.dataSources.map((item) => ( item))}}',
              values: '{{multiselect2.dataSources.map((item) => ( item))}}',
            },
            optionConfigureMode: 'dynamic',
            placeholder: 'Choose tags',
            resizeDirection: 'HORIZONTAL',
            showClear: true,
          },
        },
        input9: {
          version: 0,
          displayName: 'input9',
          parentNode: 'canvas15',
          showName: 'input',
          childrenNode: [],
          type: 'INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 17,
          minH: 3,
          minW: 1,
          x: 1,
          y: 15,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: '{{input9.displayName}}',
            hidden: false,
            label: 'Cover source',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: '{{33}}',
            placeholder: 'input sth',
            showVisibleButton: '{{true}}',
            type: 'input',
            defaultValue: '',
          },
        },
        upload2: {
          version: 0,
          displayName: 'upload2',
          parentNode: 'canvas15',
          showName: 'upload',
          childrenNode: [],
          type: 'UPLOAD_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 4,
          minH: 3,
          minW: 1,
          x: 11,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'formDataKey', 'loading'],
            appendFiles: false,
            buttonText: 'Upload',
            colorScheme: 'blue',
            dropText: '选择或拖放一个文件',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'script',
                eventType: 'change',
                id: 'events-60f3ed18-fd39-4835-a2d5-2909cf45459b',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n  \nconst upload = await uploadFilesEdit.trigger();\nconst list = await listFilesEdit.trigger();\ninput9.setValue(list[0].tinyURL);\n  \n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n})()}}',
              },
            ],
            fileType: '',
            formDataKey: '{{upload2.displayName}}',
            hidden: false,
            loading: '{{uploadFilesEdit.isRunning||listFilesEdit.isRuning}}',
            selectionType: 'single',
            showFileList: false,
            sizeType: 'mb',
            type: 'button',
            variant: 'fill',
            verticalAlign: 'center',
          },
        },
        button5: {
          version: 0,
          displayName: 'button5',
          parentNode: 'canvas15',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 3,
          minH: 3,
          minW: 1,
          x: 15,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: '{{(async function (){container2.setCurrentViewKey("View 2");})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '',
            text: '🤖️',
            variant: 'fill',
          },
        },
        button6: {
          version: 0,
          displayName: 'button6',
          parentNode: 'canvas15',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 3,
          minH: 3,
          minW: 1,
          x: 15,
          y: 28,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: '{{(async function (){container2.setCurrentViewKey("View 3");})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '',
            text: '🤖️',
            variant: 'fill',
          },
        },
        text11: {
          version: 0,
          displayName: 'text11',
          parentNode: 'canvas15',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 10,
          minH: 3,
          minW: 1,
          x: 1,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Cover source',
            verticalAlign: 'center',
            weight: 500,
          },
        },
        text15: {
          version: 0,
          displayName: 'text15',
          parentNode: 'canvas15',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 10,
          minH: 3,
          minW: 1,
          x: 1,
          y: 28,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Description',
            verticalAlign: 'center',
            weight: 500,
          },
        },
        container2: {
          version: 0,
          displayName: 'container2',
          parentNode: 'canvas15',
          showName: 'container',
          childrenNode: ['canvas18', 'canvas19', 'canvas20'],
          type: 'CONTAINER_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 44,
          w: 12,
          minH: 3,
          minW: 1,
          x: 19,
          y: 10,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'fixed',
            padding: {
              mode: 'all',
              size: '24',
            },
            radius: '4px',
            resizeDirection: 'ALL',
            shadow: 'small',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '2ff81ae9-b80d-49c9-bb6d-fc6e5119957f',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '5d53f4b4-6262-4f3f-a8b0-33507ea6a2e8',
                key: 'View 3',
                label: 'View 3',
              },
            ],
          },
        },
        canvas18: {
          version: 0,
          displayName: 'canvas18',
          parentNode: 'container2',
          showName: 'canvas',
          childrenNode: ['image4'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        image4: {
          version: 0,
          displayName: 'image4',
          parentNode: 'canvas18',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 36,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'cover',
          },
        },
        canvas19: {
          version: 0,
          displayName: 'canvas19',
          parentNode: 'container2',
          showName: 'canvas',
          childrenNode: ['textarea3', 'button11', 'image5', 'text16'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        textarea3: {
          version: 0,
          displayName: 'textarea3',
          parentNode: 'canvas19',
          showName: 'textarea',
          childrenNode: [],
          type: 'TEXTAREA_INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 11,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: '{{textarea3.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{33}}',
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '',
          },
        },
        button11: {
          version: 0,
          displayName: 'button11',
          parentNode: 'canvas19',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 11,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\nconst result = await textToImageEdit.trigger();\ninput4.setValue(result.data[0].url);\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n  }\n\n})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '{{textToImageEdit.isRunning}}',
            text: '🤖️ Generate',
            variant: 'fill',
          },
        },
        image5: {
          version: 0,
          displayName: 'image5',
          parentNode: 'canvas19',
          showName: 'image',
          childrenNode: [],
          type: 'IMAGE_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 15,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 21,
          z: 0,
          props: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc:
              '{{textToImageEdit.data===undefined||textToImageEdit.data.data[0].url===undefined?"https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3":textToImageEdit.data.data[0].url}}',
            imageSrcByURL:
              '{{textToImageEdit.data===undefined||textToImageEdit.data.data[0].url===undefined?"https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3":textToImageEdit.data.data[0].url}}',
            objectFit: 'contain',
          },
        },
        text16: {
          version: 0,
          displayName: 'text16',
          parentNode: 'canvas19',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 4,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 17,
          z: 0,
          props: {
            $dynamicAttrPaths: [],
            colorScheme: '#8a8a8aff',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'center',
            resizeDirection: 'ALL',
            value: 'Preview',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        canvas20: {
          version: 0,
          displayName: 'canvas20',
          parentNode: 'container2',
          showName: 'canvas',
          childrenNode: ['textarea4', 'button12', 'text17'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        textarea4: {
          version: 0,
          displayName: 'textarea4',
          parentNode: 'canvas20',
          showName: 'textarea',
          childrenNode: [],
          type: 'TEXTAREA_INPUT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 11,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 0,
          z: 0,
          props: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'value'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: '{{textarea4.displayName}}',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: '{{33}}',
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '{{input3.value}}',
          },
        },
        button12: {
          version: 0,
          displayName: 'button12',
          parentNode: 'canvas20',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 16,
          minH: 3,
          minW: 1,
          x: 9,
          y: 11,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  '{{(async function (){const result = await descriptionEdit.trigger();\n\ninput2.setValue(result[0].content);})()}}',
              },
            ],
            hiddenDynamic: true,
            loading: '{{descriptionEdit.isRunning}}',
            text: '🤖️ Generate',
            variant: 'fill',
          },
        },
        text17: {
          version: 0,
          displayName: 'text17',
          parentNode: 'canvas20',
          showName: 'text',
          childrenNode: [],
          type: 'TEXT_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 5,
          w: 32,
          minH: 3,
          minW: 1,
          x: 0,
          y: 16,
          z: 0,
          props: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value: '{{descriptionEdit.data[0].content}}',
            verticalAlign: 'center',
            weight: 400,
          },
        },
        canvas21: {
          version: 0,
          displayName: 'canvas21',
          parentNode: 'modal3',
          showName: 'canvas',
          childrenNode: ['button13'],
          type: 'CANVAS',
          containerType: 'EDITOR_DOT_PANEL',
          h: 0,
          w: 0,
          minH: 0,
          minW: 1,
          x: -1,
          y: -1,
          z: 0,
          props: {},
        },
        button13: {
          version: 0,
          displayName: 'button13',
          parentNode: 'canvas21',
          showName: 'button',
          childrenNode: [],
          type: 'BUTTON_WIDGET',
          containerType: 'EDITOR_SCALE_SQUARE',
          h: 6,
          w: 16,
          minH: 3,
          minW: 1,
          x: 8,
          y: 1,
          z: 0,
          props: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'cf57950d-01c9-46c9-b099-62ebe74d77de',
                script:
                  '{{(async function (){if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result = await updateData.trigger();\n\nconst result1 = await listData.trigger();\n\ncontainer2.setCurrentViewKey("View 1");\nmodal3.closeModal();\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n})()}}',
              },
            ],
            hidden: false,
            loading: '{{updateData.isRunning||listData.isRunning}}',
            text: 'Add',
            variant: 'fill',
          },
        },
      },
      action: [
        {
          actionID: 'ILAgx4p1y7ZR',
          uid: 'b7035cf7-550b-4283-b314-7d6c72a72686',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAgx4p1C7mZ',
          displayName: 'textToImageEdit',
          actionType: 'restapi',
          isVirtualResource: false,
          content: {
            body: {
              content:
                '{\n    "model": "dall-e-3",\n  "prompt": "{{textarea3.value}}",\n    "n": 1,\n    "size": "1024x1024"\n  }',
              type: 'json',
            },
            bodyType: 'raw',
            cookies: [
              {
                key: '',
                value: '',
              },
            ],
            headers: [
              {
                key: '',
                value: '',
              },
            ],
            method: 'POST',
            url: 'images/generations',
            urlParams: [
              {
                key: '',
                value: '',
              },
            ],
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823195Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:02:29.079153Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7Z0',
          uid: '129400b7-181d-4de3-9c76-0010b65d5595',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAgx4p1C7mZ',
          displayName: 'textToImage',
          actionType: 'restapi',
          isVirtualResource: false,
          content: {
            body: {
              content:
                '{\n    "model": "dall-e-3",\n  "prompt": "{{textarea1.value}}",\n    "n": 1,\n    "size": "1024x1024"\n  }',
              type: 'json',
            },
            bodyType: 'raw',
            cookies: [
              {
                key: '',
                value: '',
              },
            ],
            headers: [
              {
                key: '',
                value: '',
              },
            ],
            method: 'POST',
            url: 'images/generations',
            urlParams: [
              {
                key: '',
                value: '',
              },
            ],
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823298Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:02:29.087184Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7ZQ',
          uid: 'e46d1ebb-5c25-489a-a550-8872e7b58b9b',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7Ic',
          displayName: 'insertData',
          actionType: 'supabasedb',
          isVirtualResource: false,
          content: {
            $dynamicAttrPaths: [],
            mode: 'sql-safe',
            query: '',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823246Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823253Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7ZP',
          uid: '64b52caf-d94e-4668-bd80-5d74730e273f',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7Ic',
          displayName: 'deleteData',
          actionType: 'supabasedb',
          isVirtualResource: false,
          content: {
            $dynamicAttrPaths: [],
            mode: 'sql',
            query: 'delete from contentdistribute where id = {{dataGrid1.selectedRows[0].id}}',
            successEvent: [],
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823255Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823261Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7Z4',
          uid: 'cb461448-96e2-454d-9ef4-4f60959508cd',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7Ic',
          displayName: 'listData',
          actionType: 'supabasedb',
          isVirtualResource: false,
          content: {
            mode: 'sql',
            query:
              "select * \nfrom contentdistribute\nwhere (\n  {{!select1.value}} \n  or '{{select1.value}}' = ANY(tags)\n  ) \n  and (\n  {{!input1.value}} or label like '%{{input1.value}}%' \n  or description like '%{{input1.value}}%' \n  or url like '%{{input1.value}}%' \n  or EXISTS (\n    SELECT 1\n    FROM unnest(tags) AS t\n    WHERE t LIKE '%{{input1.value}}%'\n  )\n  )",
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'automate',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'appLoaded',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823262Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823269Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7Z3',
          uid: 'bb27288d-fec3-4d0c-ae2e-7ba46975d62a',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7d0',
          displayName: 'uploadFiles',
          actionType: 'illadrive',
          isVirtualResource: true,
          content: {
            commandArgs: {
              fileData: '{{upload1.value[0]}}',
              fileName: '{{upload1.files[0].name}}',
              fileType: 'auto',
              overwriteDuplicate: false,
              path: '/root/textToImage',
            },
            operation: 'GetUploadAddress',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.82327Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823277Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7Z2',
          uid: '272a21dd-9883-42e8-9fcc-158d8dfb1914',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7d0',
          displayName: 'uploadFilesEdit',
          actionType: 'illadrive',
          isVirtualResource: true,
          content: {
            commandArgs: {
              fileData: '{{upload3.value[0]}}',
              fileName: '{{upload3.files[0].name}}',
              fileType: 'auto',
              overwriteDuplicate: false,
              path: '/root/textToImage',
            },
            operation: 'GetUploadAddress',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823278Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.82329Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7Z1',
          uid: 'ea2cde81-7c29-4d28-8623-38f50d9f9f99',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7d0',
          displayName: 'listFilesEdit',
          actionType: 'illadrive',
          isVirtualResource: true,
          content: {
            commandArgs: {
              expirationType: 'persistent',
              expiry: '',
              fileID: '',
              filterType: 'byName',
              hotlinkProtection: true,
              limit: '{{20}}',
              page: '{{1}}',
              path: '/root/textToImage',
              search: '{{upload3.files[0].name}}',
            },
            operation: 'ListFiles',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823291Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823297Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7ZZ',
          uid: '8554d49e-4e69-4067-988b-2b19923efd74',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7d0',
          displayName: 'tags',
          actionType: 'transformer',
          isVirtualResource: true,
          content: {
            transformerString:
              '{{(function (){\nconst objectsArray = listData.data;\nlet tagsSet = new Set();\n\nobjectsArray.forEach(obj => {\n  obj.tags.forEach(tag => {\n    tagsSet.add(tag);\n  });\n});\n\nlet uniqueTagsArray = Array.from(tagsSet);\nreturn uniqueTagsArray;})()}}',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823306Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823312Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7ZY',
          uid: '930934d3-84dd-465b-9584-332cb101fcde',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7d0',
          displayName: 'listFiles',
          actionType: 'illadrive',
          isVirtualResource: true,
          content: {
            commandArgs: {
              expirationType: 'persistent',
              expiry: '',
              fileID: '',
              filterType: 'byName',
              hotlinkProtection: true,
              limit: '{{20}}',
              page: '{{1}}',
              path: '/root/textToImage',
              search: '{{upload1.files[0].name}}',
            },
            operation: 'ListFiles',
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823313Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.82332Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y7ZX',
          uid: '01fe1456-9d87-42ea-99c0-59b7ef5fee2c',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7J4',
          displayName: 'description',
          actionType: 'aiagent',
          isVirtualResource: true,
          content: {
            agentType: 1,
            input: '',
            model: 1,
            modelConfig: {
              maxTokens: 2048,
              stream: false,
            },
            variables: [
              {
                key: 'name',
                value: '{{textarea2.value}}',
              },
            ],
            virtualResource: {
              agentType: 1,
              aiAgentID: 'ILAfx4p1C7J4',
              createdAt: '2024-10-17T05:01:10.850864Z',
              createdBy: 'ILAdx4p1C7Jf',
              description: 'brief',
              editedBy: [
                {
                  avatar: '',
                  editedAt: '2024-10-17T05:01:10.850836844Z',
                  email: 'peterjaberau@gmail.com',
                  nickname: 'peterjaberau',
                  userID: 'ILAdx4p1C7Jf',
                },
              ],
              icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
              model: 1,
              modelConfig: {
                SettedMap: {
                  BestOf: false,
                  Echo: false,
                  FrequencyPenalty: false,
                  LogitBias: false,
                  Logprobs: false,
                  MaxTokens: true,
                  N: false,
                  PresencePenalty: false,
                  Stop: false,
                  Stream: true,
                  Suffix: false,
                  Temperature: true,
                  TopP: false,
                  User: false,
                },
                Stop: null,
                best_of: 0,
                echo: false,
                frequency_penalty: 0,
                logit_bias: null,
                logprobs: 0,
                maxTokens: 2048,
                n: 0,
                presence_penalty: 0,
                stream: true,
                suffix: '',
                temperature: 1,
                top_p: 0,
                user: '',
              },
              name: 'brief',
              prompt: 'Write a brief within160 characters about {{name}}',
              publishedToMarketplace: false,
              teamID: 'ILAgx4p1C7CH',
              teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
              teamIdentifier: 'private',
              teamName: 'private',
              uid: '52c46e66-f573-4de0-a847-2a1e1519a308',
              updatedAt: '2024-10-17T05:01:10.850865Z',
              updatedBy: 'ILAdx4p1C7Jf',
              variables: [
                {
                  defaultValue: '',
                  key: 'name',
                  value: 'test',
                },
              ],
            },
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823321Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823327Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y70g',
          uid: '5de01dd7-60a4-4533-b156-3fb7fca7afdc',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7J3',
          displayName: 'descriptionEdit',
          actionType: 'aiagent',
          isVirtualResource: true,
          content: {
            agentType: 1,
            input: '',
            model: 1,
            modelConfig: {
              maxTokens: 2048,
              stream: false,
            },
            variables: [
              {
                key: 'name',
                value: '{{textarea4.value}}',
              },
            ],
            virtualResource: {
              agentType: 1,
              aiAgentID: 'ILAfx4p1C7J3',
              createdAt: '2024-10-17T05:01:10.874053Z',
              createdBy: 'ILAdx4p1C7Jf',
              description: 'brief',
              editedBy: [
                {
                  avatar: '',
                  editedAt: '2024-10-17T05:01:10.874021274Z',
                  email: 'peterjaberau@gmail.com',
                  nickname: 'peterjaberau',
                  userID: 'ILAdx4p1C7Jf',
                },
              ],
              icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
              model: 1,
              modelConfig: {
                SettedMap: {
                  BestOf: false,
                  Echo: false,
                  FrequencyPenalty: false,
                  LogitBias: false,
                  Logprobs: false,
                  MaxTokens: true,
                  N: false,
                  PresencePenalty: false,
                  Stop: false,
                  Stream: true,
                  Suffix: false,
                  Temperature: true,
                  TopP: false,
                  User: false,
                },
                Stop: null,
                best_of: 0,
                echo: false,
                frequency_penalty: 0,
                logit_bias: null,
                logprobs: 0,
                maxTokens: 2048,
                n: 0,
                presence_penalty: 0,
                stream: true,
                suffix: '',
                temperature: 1,
                top_p: 0,
                user: '',
              },
              name: 'brief',
              prompt: 'Write a brief within160 characters about {{name}}',
              publishedToMarketplace: false,
              teamID: 'ILAgx4p1C7CH',
              teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
              teamIdentifier: 'private',
              teamName: 'private',
              uid: '8f3fa2c0-99bf-4ea6-bf32-ad780403a5fb',
              updatedAt: '2024-10-17T05:01:10.874053Z',
              updatedBy: 'ILAdx4p1C7Jf',
              variables: [
                {
                  defaultValue: '',
                  key: 'name',
                  value: 'test',
                },
              ],
            },
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823328Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823338Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
        {
          actionID: 'ILAgx4p1y70f',
          uid: '3ae8883a-a78c-423e-a568-059c574edbb3',
          teamID: 'ILAgx4p1C7CH',
          resourceID: 'ILAfx4p1C7Ic',
          displayName: 'updateData',
          actionType: 'supabasedb',
          isVirtualResource: false,
          content: {
            $dynamicAttrPaths: [],
            mode: 'sql-safe',
            query: '',
            successEvent: [
              {
                actionType: 'datasource',
                eventType: 'success',
                id: 'events-61fe1e6c-870c-4185-9340-32b86d721309',
                queryID: 'supabasedb1',
              },
            ],
          },
          transformer: {
            enable: false,
            rawData: '',
          },
          triggerMode: 'manually',
          config: {
            public: false,
            isVirtualResource: false,
            advancedConfig: {
              runtime: 'none',
              pages: [],
              delayWhenLoaded: '',
              displayLoadingPage: false,
              isPeriodically: false,
              periodInterval: '',
              mock: '',
            },
            mockConfig: {
              enabled: false,
              mockData: '',
              enableForReleasedApp: false,
            },
            tutorialLink: '',
          },
          createdAt: '2024-10-17T05:01:10.823339Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.823348Z',
          updatedBy: 'ILAdx4p1C7Jf',
        },
      ],
      appInfo: {
        appId: 'ILAbx4p1C7z5',
        uid: '9bb8fca3-5826-4d8d-aa34-dc1f5e772bf5',
        teamID: 'ILAgx4p1C7CH',
        appName: 'App / Web content management',
        releaseVersion: 0,
        mainlineVersion: 1,
        deployed: false,
        config: {
          public: false,
          waterMark: true,
          description: '',
          publishedToMarketplace: false,
          publishWithAIAgent: false,
          cover: '',
          appType: 'pc',
          components: [
            'DATA_GRID_WIDGET',
            'TEXT_WIDGET',
            'IMAGE_WIDGET',
            'MODAL_WIDGET',
            'CONTAINER_WIDGET',
            'UPLOAD_WIDGET',
            'SELECT_WIDGET',
            'BUTTON_WIDGET',
            'MULTISELECT_WIDGET',
            'ICON_WIDGET',
            'INPUT_WIDGET',
            'TEXTAREA_INPUT_WIDGET',
          ],
          actions: [
            {
              actionID: 'ILAgx4p1y7ZR',
              uid: 'b7035cf7-550b-4283-b314-7d6c72a72686',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAgx4p1C7mZ',
              name: 'textToImageEdit',
              icon: '',
              type: 'restapi',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823195Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:02:29.079153Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7Z0',
              uid: '129400b7-181d-4de3-9c76-0010b65d5595',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAgx4p1C7mZ',
              name: 'textToImage',
              icon: '',
              type: 'restapi',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823298Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:02:29.087184Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7ZQ',
              uid: 'e46d1ebb-5c25-489a-a550-8872e7b58b9b',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7Ic',
              name: 'insertData',
              icon: '',
              type: 'supabasedb',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823246Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823253Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7ZP',
              uid: '64b52caf-d94e-4668-bd80-5d74730e273f',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7Ic',
              name: 'deleteData',
              icon: '',
              type: 'supabasedb',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823255Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823261Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7Z4',
              uid: 'cb461448-96e2-454d-9ef4-4f60959508cd',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7Ic',
              name: 'listData',
              icon: '',
              type: 'supabasedb',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823262Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823269Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7Z3',
              uid: 'bb27288d-fec3-4d0c-ae2e-7ba46975d62a',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7d0',
              name: 'uploadFiles',
              icon: '',
              type: 'illadrive',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.82327Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823277Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7Z2',
              uid: '272a21dd-9883-42e8-9fcc-158d8dfb1914',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7d0',
              name: 'uploadFilesEdit',
              icon: '',
              type: 'illadrive',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823278Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.82329Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7Z1',
              uid: 'ea2cde81-7c29-4d28-8623-38f50d9f9f99',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7d0',
              name: 'listFilesEdit',
              icon: '',
              type: 'illadrive',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823291Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823297Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7ZZ',
              uid: '8554d49e-4e69-4067-988b-2b19923efd74',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7d0',
              name: 'tags',
              icon: '',
              type: 'transformer',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823306Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823312Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7ZY',
              uid: '930934d3-84dd-465b-9584-332cb101fcde',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7d0',
              name: 'listFiles',
              icon: '',
              type: 'illadrive',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823313Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.82332Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y7ZX',
              uid: '01fe1456-9d87-42ea-99c0-59b7ef5fee2c',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7J4',
              name: 'description',
              icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
              type: 'aiagent',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823321Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823327Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y70g',
              uid: '5de01dd7-60a4-4533-b156-3fb7fca7afdc',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7J3',
              name: 'descriptionEdit',
              icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
              type: 'aiagent',
              isVirtualResource: true,
              createdAt: '2024-10-17T05:01:10.823328Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823338Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
            {
              actionID: 'ILAgx4p1y70f',
              uid: '3ae8883a-a78c-423e-a568-059c574edbb3',
              teamID: 'ILAgx4p1C7CH',
              version: 0,
              resourceID: 'ILAfx4p1C7Ic',
              name: 'updateData',
              icon: '',
              type: 'supabasedb',
              isVirtualResource: false,
              createdAt: '2024-10-17T05:01:10.823339Z',
              createdBy: 'ILAdx4p1C7Jf',
              updatedAt: '2024-10-17T05:01:10.823348Z',
              updatedBy: 'ILAdx4p1C7Jf',
            },
          ],
        },
        updatedBy: 'ILAdx4p1C7Jf',
        updatedAt: '2024-11-06T00:07:01.184055Z',
        appActivity: {
          modifier: 'peterjaberau',
          modifiedAt: '2024-11-06T00:07:01.184055Z',
        },
        editedBy: [
          {
            userID: 'ILAdx4p1C7Jf',
            nickname: 'peterjaberau',
            email: 'peterjaberau@gmail.com',
            avatar: '',
            editedAt: '2024-11-06T00:16:05.405367244Z',
          },
        ],
      },
      collaborators: {
        inRoomUsers: [
          {
            id: 'ILAdx4p1C7Jf',
            nickname: 'peterjaberau',
            avatar: '',
          },
        ],
        components: {},
      },
      execution: {
        dependencies: {
          'textToImageEdit.content.body.content': ['textarea3.value'],
          'textToImage.content.body.content': ['textarea1.value'],
          'insertData.content.query': [
            'input5.value',
            'input4.value',
            'input6.value',
            'input2.value',
            'multiselect1.value',
          ],
          'deleteData.content.query': [
            'dataGrid1.selectedRows[0].id',
            'dataGrid1.selectedRows[0]',
            'dataGrid1.selectedRows',
          ],
          'listData.content.query': [
            'select1.value',
            'select1.value',
            'input1.value',
            'input1.value',
            'input1.value',
            'input1.value',
            'input1.value',
          ],
          'uploadFiles.content.commandArgs.fileData': ['upload1.value[0]', 'upload1.value'],
          'uploadFiles.content.commandArgs.fileName': ['upload1.files[0].name', 'upload1.files[0]', 'upload1.files'],
          'uploadFilesEdit.content.commandArgs.fileData': ['upload3.value[0]', 'upload3.value'],
          'uploadFilesEdit.content.commandArgs.fileName': [
            'upload3.files[0].name',
            'upload3.files[0]',
            'upload3.files',
          ],
          'listFilesEdit.content.commandArgs.limit': [],
          'listFilesEdit.content.commandArgs.page': [],
          'listFilesEdit.content.commandArgs.search': ['upload3.files[0].name', 'upload3.files[0]', 'upload3.files'],
          'tags.value': [
            'listData.data',
            'Set',
            'objectsArray.forEach',
            'obj.tags.forEach',
            'obj.tags',
            'tagsSet.add',
            'Array.from',
          ],
          'listFiles.content.commandArgs.limit': [],
          'listFiles.content.commandArgs.page': [],
          'listFiles.content.commandArgs.search': ['upload1.files[0].name', 'upload1.files[0]', 'upload1.files'],
          'description.content.variables[0].value': ['textarea2.value'],
          'description.content.virtualResource.prompt': ['name'],
          'descriptionEdit.content.variables[0].value': ['textarea4.value'],
          'descriptionEdit.content.virtualResource.prompt': ['name'],
          'updateData.content.query': [
            'input3.value',
            'input9.value',
            'input8.value',
            'input7.value',
            'multiselect2.value',
            'dataGrid1.selectedRows[0].id',
            'dataGrid1.selectedRows[0]',
            'dataGrid1.selectedRows',
          ],
          'dataGrid1.dataSourceJS': ['listData.data'],
          'dataGrid1.columns[5].events[0].url': [
            'dataGrid1.selectedRows[0].url',
            'dataGrid1.selectedRows[0]',
            'dataGrid1.selectedRows',
          ],
          'dataGrid1.columns[2].width': [],
          'dataGrid1.columns[2].imageSrc': ['dataGrid1.dataSourceJS.map', 'dataGrid1.dataSourceJS', 'currentRow.image'],
          'dataGrid1.columns[2].label': ['dataGrid1.dataSourceJS.map', 'dataGrid1.dataSourceJS', 'currentRow.label'],
          'dataGrid1.columns[2].labelCaption': [
            'dataGrid1.dataSourceJS.map',
            'dataGrid1.dataSourceJS',
            'currentRow.description',
          ],
          'dataGrid1.loading': ['listData.isRunning'],
          'dataGrid1.columns[3].width': [],
          'select1.labelWidth': [],
          'select1.formDataKey': ['select1.displayName'],
          'select1.mappedOption.labels': ['select1.dataSources.map', 'select1.dataSources'],
          'select1.mappedOption.values': ['select1.dataSources.map', 'select1.dataSources'],
          'select1.dataSources': ['tags.value'],
          'input1.labelWidth': [],
          'input1.formDataKey': ['input1.displayName'],
          'input1.showVisibleButton': [],
          'input5.formDataKey': ['input5.displayName'],
          'input5.labelWidth': [],
          'input5.showVisibleButton': [],
          'input6.formDataKey': ['input6.displayName'],
          'input6.labelWidth': [],
          'input6.showVisibleButton': [],
          'icon1.events[0].script': ['container1.setCurrentViewKey', 'modal2.closeModal'],
          'input2.formDataKey': ['input2.displayName'],
          'input2.labelWidth': [],
          'input2.showVisibleButton': [],
          'multiselect1.labelWidth': [],
          'multiselect1.formDataKey': ['multiselect1.displayName'],
          'multiselect1.dataSources': ['tags.value'],
          'multiselect1.mappedOption.labels': ['multiselect1.dataSources.map', 'multiselect1.dataSources'],
          'multiselect1.mappedOption.values': ['multiselect1.dataSources.map', 'multiselect1.dataSources'],
          'input4.formDataKey': ['input4.displayName'],
          'input4.labelWidth': [],
          'input4.showVisibleButton': [],
          'upload1.formDataKey': ['upload1.displayName'],
          'upload1.loading': ['uploadFiles.isRunning', 'listFiles.isRuning'],
          'upload1.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'uploadFiles.trigger',
            'listFiles.trigger',
            'input4.setValue',
            'list[0].tinyURL',
            'list[0]',
          ],
          'button8.events[0].script': ['container1.setCurrentViewKey'],
          'button7.events[0].script': ['container1.setCurrentViewKey'],
          'textarea1.formDataKey': ['textarea1.displayName'],
          'textarea1.labelWidth': [],
          'button9.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'textToImage.trigger',
            'input4.setValue',
            'result.data[0].url',
            'result.data[0]',
            'result.data',
          ],
          'button9.loading': ['textToImage.isRunning'],
          'image3.imageSrc': [
            'textToImage.data',
            'undefined',
            'textToImage.data.data[0].url',
            'textToImage.data.data[0]',
            'textToImage.data.data',
          ],
          'image3.imageSrcByURL': [
            'textToImage.data',
            'undefined',
            'textToImage.data.data[0].url',
            'textToImage.data.data[0]',
            'textToImage.data.data',
          ],
          'textarea2.formDataKey': ['textarea2.displayName'],
          'textarea2.labelWidth': [],
          'textarea2.value': ['input5.value'],
          'button10.events[0].script': ['description.trigger', 'input2.setValue', 'result[0].content', 'result[0]'],
          'button10.loading': ['description.isRunning'],
          'text14.value': ['description.data[0].content', 'description.data[0]', 'description.data'],
          'button4.loading': ['insertData.isRunning', 'listData.isRunning'],
          'button4.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'insertData.trigger',
            'listData.trigger',
            'container1.setCurrentViewKey',
            'modal2.closeModal',
          ],
          'text13.value': ['dataGrid1.selectedRows[0].label', 'dataGrid1.selectedRows[0]', 'dataGrid1.selectedRows'],
          'image1.imageSrc': ['dataGrid1.selectedRows[0].image', 'dataGrid1.selectedRows[0]', 'dataGrid1.selectedRows'],
          'image1.imageSrcByURL': [
            'dataGrid1.selectedRows[0].image',
            'dataGrid1.selectedRows[0]',
            'dataGrid1.selectedRows',
          ],
          'icon3.events[0].script': ['modal1.closeModal'],
          'icon3.tooltipText': [],
          'button1.loading': ['deleteData.isRunning', 'listData.isRunning'],
          'button1.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'deleteData.trigger',
            'listData.trigger',
            'modal1.closeModal',
          ],
          'input3.formDataKey': ['input3.displayName'],
          'input3.labelWidth': [],
          'input3.showVisibleButton': [],
          'input7.formDataKey': ['input7.displayName'],
          'input7.labelWidth': [],
          'input7.showVisibleButton': [],
          'icon2.events[0].script': ['container2.setCurrentViewKey', 'modal3.closeModal'],
          'input8.formDataKey': ['input8.displayName'],
          'input8.labelWidth': [],
          'input8.showVisibleButton': [],
          'multiselect2.labelWidth': [],
          'multiselect2.formDataKey': ['multiselect2.displayName'],
          'multiselect2.dataSources': ['tags.value'],
          'multiselect2.mappedOption.labels': ['multiselect2.dataSources.map', 'multiselect2.dataSources'],
          'multiselect2.mappedOption.values': ['multiselect2.dataSources.map', 'multiselect2.dataSources'],
          'input9.formDataKey': ['input9.displayName'],
          'input9.labelWidth': [],
          'input9.showVisibleButton': [],
          'upload2.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'uploadFilesEdit.trigger',
            'listFilesEdit.trigger',
            'input9.setValue',
            'list[0].tinyURL',
            'list[0]',
          ],
          'upload2.formDataKey': ['upload2.displayName'],
          'upload2.loading': ['uploadFilesEdit.isRunning', 'listFilesEdit.isRuning'],
          'button5.events[0].script': ['container2.setCurrentViewKey'],
          'button6.events[0].script': ['container2.setCurrentViewKey'],
          'textarea3.formDataKey': ['textarea3.displayName'],
          'textarea3.labelWidth': [],
          'button11.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'textToImageEdit.trigger',
            'input4.setValue',
            'result.data[0].url',
            'result.data[0]',
            'result.data',
          ],
          'button11.loading': ['textToImageEdit.isRunning'],
          'image5.imageSrc': [
            'textToImageEdit.data',
            'undefined',
            'textToImageEdit.data.data[0].url',
            'textToImageEdit.data.data[0]',
            'textToImageEdit.data.data',
          ],
          'image5.imageSrcByURL': [
            'textToImageEdit.data',
            'undefined',
            'textToImageEdit.data.data[0].url',
            'textToImageEdit.data.data[0]',
            'textToImageEdit.data.data',
          ],
          'textarea4.formDataKey': ['textarea4.displayName'],
          'textarea4.labelWidth': [],
          'textarea4.value': ['input3.value'],
          'button12.events[0].script': ['descriptionEdit.trigger', 'input2.setValue', 'result[0].content', 'result[0]'],
          'button12.loading': ['descriptionEdit.isRunning'],
          'text17.value': ['descriptionEdit.data[0].content', 'descriptionEdit.data[0]', 'descriptionEdit.data'],
          'button13.events[0].script': [
            'currentUserInfo',
            'undefined',
            'currentUserInfo.email',
            'utils.showNotification',
            'currentUserInfo.email.endsWith',
            'updateData.trigger',
            'listData.trigger',
            'container2.setCurrentViewKey',
            'modal3.closeModal',
          ],
          'button13.loading': ['updateData.isRunning', 'listData.isRunning'],
          'currentPageInfo.pagePath': ['root.pageSortedKey', 'root.currentPageIndex'],
          'currentPageInfo.subPagePath': ['root.currentSubPagePath'],
        },
        result: {
          textToImageEdit: {
            $actionID: 'ILAgx4p1y7ZR',
            $resourceID: 'ILAgx4p1C7mZ',
            displayName: 'textToImageEdit',
            actionType: 'restapi',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.body.content'],
            content: {
              body: {
                content: '{\n    "model": "dall-e-3",\n  "prompt": "",\n    "n": 1,\n    "size": "1024x1024"\n  }',
                type: 'json',
              },
              bodyType: 'raw',
              cookies: [
                {
                  key: '',
                  value: '',
                },
              ],
              headers: [
                {
                  key: '',
                  value: '',
                },
              ],
              method: 'POST',
              url: 'images/generations',
              urlParams: [
                {
                  key: '',
                  value: '',
                },
              ],
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              'textarea3.value': '',
            },
          },
          textToImage: {
            $actionID: 'ILAgx4p1y7Z0',
            $resourceID: 'ILAgx4p1C7mZ',
            displayName: 'textToImage',
            actionType: 'restapi',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.body.content'],
            content: {
              body: {
                content: '{\n    "model": "dall-e-3",\n  "prompt": "",\n    "n": 1,\n    "size": "1024x1024"\n  }',
                type: 'json',
              },
              bodyType: 'raw',
              cookies: [
                {
                  key: '',
                  value: '',
                },
              ],
              headers: [
                {
                  key: '',
                  value: '',
                },
              ],
              method: 'POST',
              url: 'images/generations',
              urlParams: [
                {
                  key: '',
                  value: '',
                },
              ],
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              'textarea1.value': '',
            },
          },
          insertData: {
            $actionID: 'ILAgx4p1y7ZQ',
            $resourceID: 'ILAfx4p1C7Ic',
            displayName: 'insertData',
            actionType: 'supabasedb',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.query'],
            content: {
              $dynamicAttrPaths: [],
              mode: 'sql-safe',
              query: '',
              successEvent: [
                {
                  actionType: 'datasource',
                  eventType: 'success',
                  id: 'events-3584d8db-8e17-4fd7-9bde-305c2225e6e9',
                  queryID: 'supabasedb1',
                },
              ],
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              'input5.value': '',
              'input4.value': '',
              'input6.value': '',
              'input2.value': '',
              'multiselect1.value': '',
            },
          },
          deleteData: {
            $actionID: 'ILAgx4p1y7ZP',
            $resourceID: 'ILAfx4p1C7Ic',
            displayName: 'deleteData',
            actionType: 'supabasedb',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.query'],
            content: {
              $dynamicAttrPaths: [],
              mode: 'sql',
              successEvent: [],
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {},
          },
          listData: {
            $actionID: 'ILAgx4p1y7Z4',
            $resourceID: 'ILAfx4p1C7Ic',
            displayName: 'listData',
            actionType: 'supabasedb',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.query'],
            content: {
              mode: 'sql',
              query:
                "select * \nfrom contentdistribute\nwhere (\n  true \n  or '' = ANY(tags)\n  ) \n  and (\n  true or label like '%%' \n  or description like '%%' \n  or url like '%%' \n  or EXISTS (\n    SELECT 1\n    FROM unnest(tags) AS t\n    WHERE t LIKE '%%'\n  )\n  )",
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'appLoaded',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'automate',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              '!select1.value': true,
              'select1.value': '',
              '!input1.value': true,
              'input1.value': '',
            },
            isRunning: false,
            startTime: 1730852388995,
            endTime: 1730852389406,
            runResult: {
              error: true,
              message: 'get resource failed: record not found',
            },
          },
          uploadFiles: {
            $actionID: 'ILAgx4p1y7Z3',
            $resourceID: 'ILAfx4p1C7d0',
            displayName: 'uploadFiles',
            actionType: 'illadrive',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.commandArgs.fileData', 'content.commandArgs.fileName'],
            content: {
              commandArgs: {
                fileType: 'auto',
                overwriteDuplicate: false,
                path: '/root/textToImage',
              },
              operation: 'GetUploadAddress',
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {},
          },
          uploadFilesEdit: {
            $actionID: 'ILAgx4p1y7Z2',
            $resourceID: 'ILAfx4p1C7d0',
            displayName: 'uploadFilesEdit',
            actionType: 'illadrive',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.commandArgs.fileData', 'content.commandArgs.fileName'],
            content: {
              commandArgs: {
                fileType: 'auto',
                overwriteDuplicate: false,
                path: '/root/textToImage',
              },
              operation: 'GetUploadAddress',
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {},
          },
          listFilesEdit: {
            $actionID: 'ILAgx4p1y7Z1',
            $resourceID: 'ILAfx4p1C7d0',
            displayName: 'listFilesEdit',
            actionType: 'illadrive',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.commandArgs.limit', 'content.commandArgs.page', 'content.commandArgs.search'],
            content: {
              commandArgs: {
                expirationType: 'persistent',
                expiry: '',
                fileID: '',
                filterType: 'byName',
                hotlinkProtection: true,
                limit: 20,
                page: 1,
                path: '/root/textToImage',
              },
              operation: 'ListFiles',
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              '1': 1,
              '20': 20,
            },
          },
          tags: {
            $actionID: 'ILAgx4p1y7ZZ',
            $resourceID: 'ILAfx4p1C7d0',
            displayName: 'tags',
            actionType: 'transformer',
            $type: 'ACTION',
            $dynamicAttrPaths: ['value'],
            $context: {},
          },
          listFiles: {
            $actionID: 'ILAgx4p1y7ZY',
            $resourceID: 'ILAfx4p1C7d0',
            displayName: 'listFiles',
            actionType: 'illadrive',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.commandArgs.limit', 'content.commandArgs.page', 'content.commandArgs.search'],
            content: {
              commandArgs: {
                expirationType: 'persistent',
                expiry: '',
                fileID: '',
                filterType: 'byName',
                hotlinkProtection: true,
                limit: 20,
                page: 1,
                path: '/root/textToImage',
              },
              operation: 'ListFiles',
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              '1': 1,
              '20': 20,
            },
          },
          description: {
            $actionID: 'ILAgx4p1y7ZX',
            $resourceID: 'ILAfx4p1C7J4',
            displayName: 'description',
            actionType: 'aiagent',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.variables[0].value', 'content.virtualResource.prompt'],
            content: {
              agentType: 1,
              input: '',
              model: 1,
              modelConfig: {
                maxTokens: 2048,
                stream: false,
              },
              variables: [
                {
                  key: 'name',
                },
              ],
              virtualResource: {
                agentType: 1,
                aiAgentID: 'ILAfx4p1C7J4',
                createdAt: '2024-10-17T05:01:10.850864Z',
                createdBy: 'ILAdx4p1C7Jf',
                description: 'brief',
                editedBy: [
                  {
                    avatar: '',
                    editedAt: '2024-10-17T05:01:10.850836844Z',
                    email: 'peterjaberau@gmail.com',
                    nickname: 'peterjaberau',
                    userID: 'ILAdx4p1C7Jf',
                  },
                ],
                icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
                model: 1,
                modelConfig: {
                  SettedMap: {
                    BestOf: false,
                    Echo: false,
                    FrequencyPenalty: false,
                    LogitBias: false,
                    Logprobs: false,
                    MaxTokens: true,
                    N: false,
                    PresencePenalty: false,
                    Stop: false,
                    Stream: true,
                    Suffix: false,
                    Temperature: true,
                    TopP: false,
                    User: false,
                  },
                  Stop: null,
                  best_of: 0,
                  echo: false,
                  frequency_penalty: 0,
                  logit_bias: null,
                  logprobs: 0,
                  maxTokens: 2048,
                  n: 0,
                  presence_penalty: 0,
                  stream: true,
                  suffix: '',
                  temperature: 1,
                  top_p: 0,
                  user: '',
                },
                name: 'brief',
                prompt: 'Write a brief within160 characters about ',
                publishedToMarketplace: false,
                teamID: 'ILAgx4p1C7CH',
                teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
                teamIdentifier: 'private',
                teamName: 'private',
                uid: '52c46e66-f573-4de0-a847-2a1e1519a308',
                updatedAt: '2024-10-17T05:01:10.850865Z',
                updatedBy: 'ILAdx4p1C7Jf',
                variables: [
                  {
                    defaultValue: '',
                    key: 'name',
                    value: 'test',
                  },
                ],
              },
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              name: '',
              'textarea2.value': '',
            },
          },
          descriptionEdit: {
            $actionID: 'ILAgx4p1y70g',
            $resourceID: 'ILAfx4p1C7J3',
            displayName: 'descriptionEdit',
            actionType: 'aiagent',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.variables[0].value', 'content.virtualResource.prompt'],
            content: {
              agentType: 1,
              input: '',
              model: 1,
              modelConfig: {
                maxTokens: 2048,
                stream: false,
              },
              variables: [
                {
                  key: 'name',
                },
              ],
              virtualResource: {
                agentType: 1,
                aiAgentID: 'ILAfx4p1C7J3',
                createdAt: '2024-10-17T05:01:10.874053Z',
                createdBy: 'ILAdx4p1C7Jf',
                description: 'brief',
                editedBy: [
                  {
                    avatar: '',
                    editedAt: '2024-10-17T05:01:10.874021274Z',
                    email: 'peterjaberau@gmail.com',
                    nickname: 'peterjaberau',
                    userID: 'ILAdx4p1C7Jf',
                  },
                ],
                icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
                model: 1,
                modelConfig: {
                  SettedMap: {
                    BestOf: false,
                    Echo: false,
                    FrequencyPenalty: false,
                    LogitBias: false,
                    Logprobs: false,
                    MaxTokens: true,
                    N: false,
                    PresencePenalty: false,
                    Stop: false,
                    Stream: true,
                    Suffix: false,
                    Temperature: true,
                    TopP: false,
                    User: false,
                  },
                  Stop: null,
                  best_of: 0,
                  echo: false,
                  frequency_penalty: 0,
                  logit_bias: null,
                  logprobs: 0,
                  maxTokens: 2048,
                  n: 0,
                  presence_penalty: 0,
                  stream: true,
                  suffix: '',
                  temperature: 1,
                  top_p: 0,
                  user: '',
                },
                name: 'brief',
                prompt: 'Write a brief within160 characters about ',
                publishedToMarketplace: false,
                teamID: 'ILAgx4p1C7CH',
                teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
                teamIdentifier: 'private',
                teamName: 'private',
                uid: '8f3fa2c0-99bf-4ea6-bf32-ad780403a5fb',
                updatedAt: '2024-10-17T05:01:10.874053Z',
                updatedBy: 'ILAdx4p1C7Jf',
                variables: [
                  {
                    defaultValue: '',
                    key: 'name',
                    value: 'test',
                  },
                ],
              },
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {
              name: '',
              'textarea4.value': '',
            },
          },
          updateData: {
            $actionID: 'ILAgx4p1y70f',
            $resourceID: 'ILAfx4p1C7Ic',
            displayName: 'updateData',
            actionType: 'supabasedb',
            $type: 'ACTION',
            $dynamicAttrPaths: ['content.query'],
            content: {
              $dynamicAttrPaths: [],
              mode: 'sql-safe',
              successEvent: [
                {
                  actionType: 'datasource',
                  eventType: 'success',
                  id: 'events-61fe1e6c-870c-4185-9340-32b86d721309',
                  queryID: 'supabasedb1',
                },
              ],
            },
            config: {
              public: false,
              isVirtualResource: false,
              advancedConfig: {
                runtime: 'none',
                pages: [],
                displayLoadingPage: false,
                isPeriodically: false,
                mock: '',
              },
              mockConfig: {
                enabled: false,
                mockData: '',
                enableForReleasedApp: false,
              },
              tutorialLink: '',
            },
            triggerMode: 'manually',
            transformer: {
              enable: false,
              rawData: '',
            },
            $validationPaths: {
              'config.advancedConfig.delayWhenLoaded': 'Number',
              'config.advancedConfig.periodInterval': 'Number',
            },
            $context: {},
          },
          root: {
            currentPageIndex: 0,
            pageSortedKey: ['page1'],
            viewportSizeType: 'fluid',
            displayName: 'root',
            $parentNode: '',
            $type: 'WIDGET',
            $widgetType: 'DOT_PANEL',
            $childrenNode: ['page1'],
          },
          page1: {
            bodyColumns: 32,
            bottomHeight: 0,
            canvasSize: 'auto',
            canvasWidth: 100,
            footerColumns: 32,
            hasFooter: false,
            hasHeader: false,
            hasLeft: false,
            hasRight: false,
            headerColumns: 32,
            isFooterFixed: true,
            isHeaderFixed: true,
            isLeftFixed: true,
            isRightFixed: true,
            layout: 'default',
            leftColumns: 8,
            leftPosition: 'NONE',
            leftWidth: 0,
            rightColumns: 8,
            rightPosition: 'NONE',
            rightWidth: 0,
            showLeftFoldIcon: false,
            showRightFoldIcon: false,
            topHeight: 0,
            displayName: 'page1',
            $parentNode: 'root',
            $type: 'WIDGET',
            $widgetType: 'PAGE_NODE',
            $childrenNode: ['bodySection1', 'modalSection1'],
            $parentPageName: 'page1',
          },
          bodySection1: {
            currentViewIndex: 0,
            defaultViewKey: 'sub-page1',
            sectionViewConfigs: [
              {
                id: 'a1b12fc6-00cc-479c-83e8-4ae6ab9fdbc3',
                key: 'sub-page1',
                path: 'sub-page1',
                viewDisplayName: 'bodySection1-bodySectionContainer1',
              },
            ],
            style: {
              background: 'white',
              padding: {
                mode: 'all',
                size: '24',
              },
            },
            viewSortedKey: ['bodySection1-bodySectionContainer1'],
            displayName: 'bodySection1',
            $parentNode: 'page1',
            $type: 'WIDGET',
            $widgetType: 'SECTION_NODE',
            $childrenNode: ['bodySection1-bodySectionContainer1'],
            $parentPageName: 'page1',
          },
          container3: {
            $dynamicAttrPaths: [],
            backgroundColor: 'blue',
            borderWidth: '8px',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            padding: {
              mode: 'all',
              size: '0',
            },
            radius: '8',
            resizeDirection: 'HORIZONTAL',
            shadow: 'none',
            viewList: [
              {
                id: '3b45741e-05a1-409f-b435-9cfc8bda623a',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '4b7f04ca-7704-467a-b14d-f0bb37c54fc7',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '976fb6bd-f8dc-4dc0-b4e4-1edff90e466f',
                key: 'View 3',
                label: 'View 3',
              },
            ],
            displayName: 'container3',
            $parentNode: 'bodySection1-bodySectionContainer1',
            $type: 'WIDGET',
            $widgetType: 'CONTAINER_WIDGET',
            $childrenNode: ['canvas12', 'canvas13', 'canvas14'],
            $parentPageName: 'page1',
            $validationPaths: {
              viewList: [
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
              ],
              tooltipText: 'String',
            },
          },
          canvas12: {
            displayName: 'canvas12',
            $parentNode: 'container3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text4', 'image6', 'container5'],
            $parentPageName: 'page1',
          },
          text4: {
            $dynamicAttrPaths: [],
            borderWidth: '32px',
            colorScheme: 'white',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '32px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value: '# Content management',
            verticalAlign: 'center',
            displayName: 'text4',
            $parentNode: 'canvas12',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          image6: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '0px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/5971e713-92bc-43ad-b534-7245df408ff6',
            imageSrcByUpload: 'https://cloud-api.illacloud.com/drive/f/5971e713-92bc-43ad-b534-7245df408ff6',
            objectFit: 'contain',
            displayName: 'image6',
            $parentNode: 'canvas12',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          container5: {
            $dynamicAttrPaths: [],
            backgroundColor: 'blue',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'openUrl',
                eventType: 'click',
                id: 'events-6e98bb93-97c7-4271-ac11-5e6cfd3e39fb',
                newTab: true,
                url: 'https://builder.illacloud.com/ILLADemoInternal/deploy/app/ILAcx4p1C7NY',
              },
            ],
            padding: {
              mode: 'all',
              size: '0',
            },
            radius: '4px',
            resizeDirection: 'HORIZONTAL',
            shadow: 'none',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
            ],
            displayName: 'container5',
            $parentNode: 'canvas12',
            $type: 'WIDGET',
            $widgetType: 'CONTAINER_WIDGET',
            $childrenNode: ['canvas22'],
            $parentPageName: 'page1',
            $validationPaths: {
              viewList: [
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
              ],
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              tooltipText: 'String',
            },
          },
          canvas22: {
            displayName: 'canvas22',
            $parentNode: 'container5',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text19'],
            $parentPageName: 'page1',
          },
          text19: {
            $dynamicAttrPaths: [],
            colorScheme: 'white',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            value:
              'We use this product to manage the content displayed on the client side. Click here to try the demo. ',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text19',
            $parentNode: 'canvas22',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas13: {
            displayName: 'canvas13',
            $parentNode: 'container3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [],
            $parentPageName: 'page1',
          },
          canvas14: {
            displayName: 'canvas14',
            $parentNode: 'container3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [],
            $parentPageName: 'page1',
          },
          container4: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            borderColor: '#e5e6ebff',
            borderWidth: '1px',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'auto',
            padding: {
              mode: 'partial',
              size: '8 24 16 24',
            },
            radius: '8',
            resizeDirection: 'HORIZONTAL',
            shadow: 'small',
            viewList: [
              {
                id: 'b85d5ce5-a075-4ad7-a839-1cd963d3bf24',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: 'af846d65-c08a-4b76-95a0-51eff8118485',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '92748ed4-d289-4a0b-a0d5-aa797d262b16',
                key: 'View 3',
                label: 'View 3',
              },
            ],
            displayName: 'container4',
            $parentNode: 'bodySection1-bodySectionContainer1',
            $type: 'WIDGET',
            $widgetType: 'CONTAINER_WIDGET',
            $childrenNode: ['canvas11', 'canvas16', 'canvas17'],
            $parentPageName: 'page1',
            $validationPaths: {
              viewList: [
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
              ],
              tooltipText: 'String',
            },
          },
          canvas11: {
            displayName: 'canvas11',
            $parentNode: 'container4',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text7', 'dataGrid1'],
            $parentPageName: 'page1',
          },
          text7: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '## Content list',
            verticalAlign: 'center',
            displayName: 'text7',
            $parentNode: 'canvas11',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          dataGrid1: {
            $dynamicAttrPaths: [
              'dataSourceJS',
              'columns[5].events[0].url',
              'columns[2].width',
              'columns[2].imageSrc',
              'columns[2].label',
              'columns[2].labelCaption',
              'loading',
              'columns[3].width',
            ],
            columnVisibilityModel: {
              id: false,
              image: false,
              label: false,
              url: true,
            },
            columns: [
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'id',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'id',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'label',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'label',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                columnType: 'avatar',
                description: '',
                disableReorder: false,
                field: 'description',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'Information',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 700,
              },
              {
                aggregable: true,
                columnType: 'auto',
                description: '',
                disableReorder: false,
                field: 'tags',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'tags',
                hideable: true,
                isCalc: true,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 240,
              },
              {
                aggregable: true,
                columnType: 'image',
                description: '',
                disableReorder: false,
                field: 'image',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'cover',
                hideable: true,
                isCalc: true,
                objectFit: 'container',
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                colorScheme: 'grayBlue',
                columnType: 'button',
                description: '',
                disableReorder: false,
                events: [
                  {
                    actionType: 'openUrl',
                    eventType: 'click',
                    id: 'events-a1ad75fe-ff86-4a37-ade4-be5a8c7e196f',
                    newTab: true,
                  },
                ],
                field: 'url',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'url',
                hideable: true,
                isCalc: true,
                mappedValue: 'Detail',
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
              {
                aggregable: true,
                buttonGroup: [
                  {
                    colorScheme: 'grayBlue',
                    events: [
                      {
                        actionType: 'widget',
                        eventType: 'click',
                        id: 'events-51e1bef3-d0ca-4766-93c6-495573a1b4d9',
                        widgetID: 'modal3',
                        widgetMethod: 'openModal',
                      },
                    ],
                    id: '8080240c-d3d9-4376-8da7-b5b10d957d22',
                    mappedValue: 'Edit',
                  },
                  {
                    colorScheme: 'grayBlue',
                    events: [
                      {
                        actionType: 'widget',
                        eventType: 'click',
                        id: 'events-9bda0bc7-2742-46bc-b834-44c9707df499',
                        widgetID: 'modal1',
                        widgetMethod: 'openModal',
                      },
                    ],
                    id: '65b7e523-01ab-429f-b002-1711b429545d',
                    mappedValue: 'Delete',
                  },
                ],
                columnType: 'buttongroup',
                description: '',
                disableReorder: false,
                field: '67eab4ab-1c13-4412-9396-f2df36cefc80',
                filterable: true,
                groupable: true,
                headerAlign: 'left',
                headerName: 'Operation',
                hideable: true,
                isCalc: false,
                pinnable: true,
                resizable: true,
                sortable: true,
                width: 170,
              },
            ],
            dataSource: [],
            dataSourceMode: 'dynamic',
            enablePagination: false,
            excludeHiddenColumns: true,
            loading: false,
            loadingDynamic: true,
            rowSelection: true,
            sortOrder: 'default',
            displayName: 'dataGrid1',
            $parentNode: 'canvas11',
            $type: 'WIDGET',
            $widgetType: 'DATA_GRID_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              loading: 'Boolean',
              primaryKey: 'String',
              sortKey: 'String',
              rowSelection: 'Boolean',
              enablePagination: 'Boolean',
              enableServerSidePagination: 'Boolean',
              totalRowCount: 'Number',
              pageSize: 'Number',
              page: 'Number',
              pageSizeOptions: 'Array',
              densitySetting: 'Boolean',
              columnSetting: 'Boolean',
              refreshSetting: 'Boolean',
              exportSetting: 'Boolean',
              exportAllSetting: 'Boolean',
              filterSetting: 'Boolean',
              quickFilterSetting: 'Boolean',
              excludeHiddenColumns: 'Boolean',
            },
            pageSize: 8,
            page: 0,
            selectedRowsPrimaryKeys: [],
            selectedRows: [],
          },
          canvas16: {
            displayName: 'canvas16',
            $parentNode: 'container4',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [],
            $parentPageName: 'page1',
          },
          canvas17: {
            displayName: 'canvas17',
            $parentNode: 'container4',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [],
            $parentPageName: 'page1',
          },
          select1: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'mappedOption.labels',
              'mappedOption.values',
              'dataSources',
            ],
            colorScheme: 'blue',
            formDataKey: 'select1',
            hidden: false,
            label: 'Page',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 15,
            manualOptions: [
              {
                id: 'option-692ed38f-a67f-4a59-ba20-a914dd32bd76',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-5324bca0-3b09-415f-9533-3966ead13b84',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-faeee67d-bfde-4327-b04a-f4cb80adffc6',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {},
            optionConfigureMode: 'dynamic',
            placeholder: 'Select a tag',
            showClear: true,
            value: '',
            displayName: 'select1',
            $parentNode: 'bodySection1-bodySectionContainer1',
            $type: 'WIDGET',
            $widgetType: 'SELECT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              manualOptions: [
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
              ],
              dataSources: 'Array',
              mappedOption: {
                labels: 'Array',
                values: 'Array',
              },
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showClear: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button3: {
            $dynamicAttrPaths: [],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'widget',
                eventType: 'click',
                id: 'events-a8868d43-8f32-455e-8a2d-19c2f39ff598',
                widgetID: 'modal2',
                widgetMethod: 'openModal',
              },
            ],
            hidden: false,
            text: '+ Add new',
            variant: 'fill',
            displayName: 'button3',
            $parentNode: 'bodySection1-bodySectionContainer1',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          input1: {
            $dynamicAttrPaths: ['labelWidth', 'formDataKey', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input1',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 15,
            placeholder: 'Search',
            showVisibleButton: true,
            type: 'search',
            value: '',
            defaultValue: '',
            displayName: 'input1',
            $parentNode: 'bodySection1-bodySectionContainer1',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          modalSection1: {
            displayName: 'modalSection1',
            $parentNode: 'page1',
            $type: 'WIDGET',
            $widgetType: 'MODAL_SECTION_NODE',
            $childrenNode: ['modal2', 'modal1', 'modal3'],
            $parentPageName: 'page1',
          },
          modal2: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: 9,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
            displayName: 'modal2',
            $parentNode: 'modalSection1',
            $type: 'WIDGET',
            $widgetType: 'MODAL_WIDGET',
            $childrenNode: ['canvas4', 'canvas5', 'canvas6'],
            $parentPageName: 'page1',
            $validationPaths: {},
          },
          canvas4: {
            displayName: 'canvas4',
            $parentNode: 'modal2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text2'],
            $parentPageName: 'page1',
          },
          text2: {
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Modal',
            verticalAlign: 'center',
            displayName: 'text2',
            $parentNode: 'canvas4',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas5: {
            displayName: 'canvas5',
            $parentNode: 'modal2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [
              'input5',
              'input6',
              'text3',
              'icon1',
              'input2',
              'multiselect1',
              'input4',
              'upload1',
              'button8',
              'button7',
              'text5',
              'text6',
              'container1',
            ],
            $parentPageName: 'page1',
          },
          input5: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input5',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input5',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          input6: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input6',
            hidden: false,
            label: 'URL',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input6',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          text3: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Add new',
            verticalAlign: 'center',
            displayName: 'text3',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          icon1: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: 'container1.setCurrentViewKey("View 1");\nmodal2.closeModal();\n\n',
              },
            ],
            hidden: false,
            iconName: 'BsX',
            displayName: 'icon1',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'ICON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              iconName: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          input2: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input2',
            hidden: false,
            label: 'Description',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input2',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          multiselect1: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'dataSources',
              'mappedOption.labels',
              'mappedOption.values',
            ],
            colorScheme: 'blue',
            dynamicHeight: 'auto',
            formDataKey: 'multiselect1',
            hidden: false,
            label: 'Tags',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            manualOptions: [
              {
                id: 'option-ede99dc1-f90c-41d1-b1c4-9b3b697d02af',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-d03acb01-e5b6-4d2b-b054-d398181fbf52',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-f0136676-4926-4b6f-bd05-30c53e7c5001',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {},
            optionConfigureMode: 'dynamic',
            placeholder: 'Choose tags',
            resizeDirection: 'HORIZONTAL',
            showClear: true,
            displayName: 'multiselect1',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'MULTISELECT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              manualOptions: [
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
              ],
              dataSources: 'Array',
              mappedOption: {
                labels: 'Array',
                values: 'Array',
              },
              value: 'Array',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showClear: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              atLeastNumber: 'Number',
              upToNumber: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          input4: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input4',
            hidden: false,
            label: 'Cover source',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input4',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          upload1: {
            $dynamicAttrPaths: ['formDataKey', 'loading', 'events[0].script'],
            appendFiles: false,
            buttonText: 'Upload',
            colorScheme: 'blue',
            dropText: '选择或拖放一个文件',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'script',
                eventType: 'change',
                id: 'events-60f3ed18-fd39-4835-a2d5-2909cf45459b',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst upload = await uploadFiles.trigger();\n\nconst list = await listFiles.trigger();\n\ninput4.setValue(list[0].tinyURL);\n\n\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n',
              },
            ],
            formDataKey: 'upload1',
            hidden: false,
            selectionType: 'single',
            showFileList: false,
            sizeType: 'mb',
            type: 'button',
            variant: 'fill',
            verticalAlign: 'center',
            displayName: 'upload1',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'UPLOAD_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              buttonText: 'String',
              dropText: 'String',
              fileType: 'Array',
              appendFiles: 'Boolean',
              showFileList: 'Boolean',
              parseValue: 'Boolean',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              maxFiles: 'Number',
              minFiles: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button8: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'container1.setCurrentViewKey("View 2");',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️',
            variant: 'fill',
            displayName: 'button8',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          button7: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'container1.setCurrentViewKey("View 3");',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️',
            variant: 'fill',
            displayName: 'button7',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text5: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Cover source',
            verticalAlign: 'center',
            weight: 500,
            displayName: 'text5',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text6: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Description',
            verticalAlign: 'center',
            weight: 500,
            displayName: 'text6',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          container1: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'fixed',
            padding: {
              mode: 'all',
              size: '24',
            },
            radius: '4px',
            resizeDirection: 'ALL',
            shadow: 'small',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '2ff81ae9-b80d-49c9-bb6d-fc6e5119957f',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '5d53f4b4-6262-4f3f-a8b0-33507ea6a2e8',
                key: 'View 3',
                label: 'View 3',
              },
            ],
            displayName: 'container1',
            $parentNode: 'canvas5',
            $type: 'WIDGET',
            $widgetType: 'CONTAINER_WIDGET',
            $childrenNode: ['canvas7', 'canvas8', 'canvas9'],
            $parentPageName: 'page1',
            $validationPaths: {
              viewList: [
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
              ],
              tooltipText: 'String',
            },
          },
          canvas7: {
            displayName: 'canvas7',
            $parentNode: 'container1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['image2'],
            $parentPageName: 'page1',
          },
          image2: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'cover',
            displayName: 'image2',
            $parentNode: 'canvas7',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          canvas8: {
            displayName: 'canvas8',
            $parentNode: 'container1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['textarea1', 'button9', 'image3', 'text8'],
            $parentPageName: 'page1',
          },
          textarea1: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: 'textarea1',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 33,
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '',
            displayName: 'textarea1',
            $parentNode: 'canvas8',
            $type: 'WIDGET',
            $widgetType: 'TEXTAREA_INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button9: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\nconst result = await textToImage.trigger();\ninput4.setValue(result.data[0].url);\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n  }\n\n\n',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️ Generate',
            variant: 'fill',
            displayName: 'button9',
            $parentNode: 'canvas8',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          image3: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'contain',
            displayName: 'image3',
            $parentNode: 'canvas8',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          text8: {
            $dynamicAttrPaths: [],
            colorScheme: '#8a8a8aff',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'center',
            resizeDirection: 'ALL',
            value: 'Preview',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text8',
            $parentNode: 'canvas8',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas9: {
            displayName: 'canvas9',
            $parentNode: 'container1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['textarea2', 'button10', 'text14'],
            $parentPageName: 'page1',
          },
          textarea2: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'value'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: 'textarea2',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 33,
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            displayName: 'textarea2',
            $parentNode: 'canvas9',
            $type: 'WIDGET',
            $widgetType: 'TEXTAREA_INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button10: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'const result = await description.trigger();\n\ninput2.setValue(result[0].content);',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️ Generate',
            variant: 'fill',
            displayName: 'button10',
            $parentNode: 'canvas9',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text14: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text14',
            $parentNode: 'canvas9',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas6: {
            displayName: 'canvas6',
            $parentNode: 'modal2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['button4'],
            $parentPageName: 'page1',
          },
          button4: {
            $dynamicAttrPaths: ['loading', 'events[0].script'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'cf57950d-01c9-46c9-b099-62ebe74d77de',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result = await insertData.trigger();\n\nconst result1 = await listData.trigger();\n\ncontainer1.setCurrentViewKey("View 1");\nmodal2.closeModal();\n\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n\n',
              },
            ],
            hidden: false,
            loading: false,
            text: 'Add',
            variant: 'fill',
            displayName: 'button4',
            $parentNode: 'canvas6',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          modal1: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: -3,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
            displayName: 'modal1',
            $parentNode: 'modalSection1',
            $type: 'WIDGET',
            $widgetType: 'MODAL_WIDGET',
            $childrenNode: ['canvas1', 'canvas2', 'canvas3'],
            $parentPageName: 'page1',
            $validationPaths: {},
          },
          canvas1: {
            displayName: 'canvas1',
            $parentNode: 'modal1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [],
            $parentPageName: 'page1',
          },
          canvas2: {
            displayName: 'canvas2',
            $parentNode: 'modal1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text9', 'text12', 'text13', 'image1', 'icon3', 'text18'],
            $parentPageName: 'page1',
          },
          text9: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '**Are you sure you want to delete this item?**',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text9',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text12: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'After confirming the deletion, it will not be recoverable. Please confirm.',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text12',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text13: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text13',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          image1: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '0px',
            objectFit: 'cover',
            displayName: 'image1',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          icon3: {
            $dynamicAttrPaths: ['events[0].script', 'tooltipText'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: 'modal1.closeModal();\n\n',
              },
            ],
            hidden: false,
            iconName: 'BsX',
            tooltipText: '{{}}',
            displayName: 'icon3',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'ICON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              iconName: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text18: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Delete',
            verticalAlign: 'center',
            displayName: 'text18',
            $parentNode: 'canvas2',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas3: {
            displayName: 'canvas3',
            $parentNode: 'modal1',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['button1'],
            $parentPageName: 'page1',
          },
          button1: {
            $dynamicAttrPaths: ['loading', 'events[0].script'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: '29df3f29-8e3e-477f-8495-282a56ac5e8f',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result1 = await deleteData.trigger();\nconst result2 = await listData.trigger();\nmodal1.closeModal();\n\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n',
              },
            ],
            hidden: false,
            loading: false,
            text: 'Delete',
            variant: 'fill',
            displayName: 'button1',
            $parentNode: 'canvas3',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          modal3: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            clickMaskClose: false,
            footerHeight: 9,
            headerHeight: 11,
            radius: '4px',
            shadow: 'small',
            showFooter: true,
            showHeader: false,
            displayName: 'modal3',
            $parentNode: 'modalSection1',
            $type: 'WIDGET',
            $widgetType: 'MODAL_WIDGET',
            $childrenNode: ['canvas10', 'canvas15', 'canvas21'],
            $parentPageName: 'page1',
            $validationPaths: {},
          },
          canvas10: {
            displayName: 'canvas10',
            $parentNode: 'modal3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['text1'],
            $parentPageName: 'page1',
          },
          text1: {
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Modal',
            verticalAlign: 'center',
            displayName: 'text1',
            $parentNode: 'canvas10',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas15: {
            displayName: 'canvas15',
            $parentNode: 'modal3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: [
              'input3',
              'input7',
              'text10',
              'icon2',
              'input8',
              'multiselect2',
              'input9',
              'upload2',
              'button5',
              'button6',
              'text11',
              'text15',
              'container2',
            ],
            $parentPageName: 'page1',
          },
          input3: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input3',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input3',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          input7: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input7',
            hidden: false,
            label: 'URL',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input7',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          text10: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'fixed',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: '### Edit',
            verticalAlign: 'center',
            displayName: 'text10',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          icon2: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-adc9d224-111c-4c34-ba19-9d82ff9d9546',
                script: 'container2.setCurrentViewKey("View 1");\nmodal3.closeModal();\n\n',
              },
            ],
            hidden: false,
            iconName: 'BsX',
            displayName: 'icon2',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'ICON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              iconName: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          input8: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input8',
            hidden: false,
            label: 'Description',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input8',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          multiselect2: {
            $dynamicAttrPaths: [
              'labelWidth',
              'formDataKey',
              'dataSources',
              'mappedOption.labels',
              'mappedOption.values',
            ],
            colorScheme: 'blue',
            dynamicHeight: 'auto',
            formDataKey: 'multiselect2',
            hidden: false,
            label: 'Tags',
            labelAlign: 'left',
            labelPosition: 'top',
            labelWidth: 33,
            manualOptions: [
              {
                id: 'option-ede99dc1-f90c-41d1-b1c4-9b3b697d02af',
                label: 'Option 1',
                value: 'Option 1',
              },
              {
                id: 'option-d03acb01-e5b6-4d2b-b054-d398181fbf52',
                label: 'Option 2',
                value: 'Option 2',
              },
              {
                id: 'option-f0136676-4926-4b6f-bd05-30c53e7c5001',
                label: 'Option 3',
                value: 'Option 3',
              },
            ],
            mappedOption: {},
            optionConfigureMode: 'dynamic',
            placeholder: 'Choose tags',
            resizeDirection: 'HORIZONTAL',
            showClear: true,
            displayName: 'multiselect2',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'MULTISELECT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              manualOptions: [
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
                {
                  label: 'String',
                  disabled: 'Boolean',
                },
              ],
              dataSources: 'Array',
              mappedOption: {
                labels: 'Array',
                values: 'Array',
              },
              value: 'Array',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showClear: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              atLeastNumber: 'Number',
              upToNumber: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          input9: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'showVisibleButton'],
            colorScheme: 'blue',
            formDataKey: 'input9',
            hidden: false,
            label: 'Cover source',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'top',
            labelWidth: 33,
            placeholder: 'input sth',
            showVisibleButton: true,
            type: 'input',
            defaultValue: '',
            displayName: 'input9',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              type: 'String',
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              showVisibleButton: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              prefixText: 'String',
              suffixText: 'String',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          upload2: {
            $dynamicAttrPaths: ['events[0].script', 'formDataKey', 'loading'],
            appendFiles: false,
            buttonText: 'Upload',
            colorScheme: 'blue',
            dropText: '选择或拖放一个文件',
            dynamicHeight: 'auto',
            events: [
              {
                actionType: 'script',
                eventType: 'change',
                id: 'events-60f3ed18-fd39-4835-a2d5-2909cf45459b',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n  \nconst upload = await uploadFilesEdit.trigger();\nconst list = await listFilesEdit.trigger();\ninput9.setValue(list[0].tinyURL);\n  \n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n',
              },
            ],
            formDataKey: 'upload2',
            hidden: false,
            selectionType: 'single',
            showFileList: false,
            sizeType: 'mb',
            type: 'button',
            variant: 'fill',
            verticalAlign: 'center',
            displayName: 'upload2',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'UPLOAD_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              buttonText: 'String',
              dropText: 'String',
              fileType: 'Array',
              appendFiles: 'Boolean',
              showFileList: 'Boolean',
              parseValue: 'Boolean',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              maxFiles: 'Number',
              minFiles: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button5: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'container2.setCurrentViewKey("View 2");',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️',
            variant: 'fill',
            displayName: 'button5',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          button6: {
            $dynamicAttrPaths: ['events[0].script'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'container2.setCurrentViewKey("View 3");',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️',
            variant: 'fill',
            displayName: 'button6',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text11: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Cover source',
            verticalAlign: 'center',
            weight: 500,
            displayName: 'text11',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text15: {
            $dynamicAttrPaths: [],
            colorScheme: 'grayBlue',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'ALL',
            value: 'Description',
            verticalAlign: 'center',
            weight: 500,
            displayName: 'text15',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          container2: {
            $dynamicAttrPaths: [],
            backgroundColor: '#ffffffff',
            currentIndex: 0,
            currentKey: 'View 1',
            dynamicHeight: 'fixed',
            padding: {
              mode: 'all',
              size: '24',
            },
            radius: '4px',
            resizeDirection: 'ALL',
            shadow: 'small',
            viewList: [
              {
                id: 'e89ca895-2c49-4d35-9b83-e54bdfe1d921',
                key: 'View 1',
                label: 'View 1',
              },
              {
                id: '2ff81ae9-b80d-49c9-bb6d-fc6e5119957f',
                key: 'View 2',
                label: 'View 2',
              },
              {
                id: '5d53f4b4-6262-4f3f-a8b0-33507ea6a2e8',
                key: 'View 3',
                label: 'View 3',
              },
            ],
            displayName: 'container2',
            $parentNode: 'canvas15',
            $type: 'WIDGET',
            $widgetType: 'CONTAINER_WIDGET',
            $childrenNode: ['canvas18', 'canvas19', 'canvas20'],
            $parentPageName: 'page1',
            $validationPaths: {
              viewList: [
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
                {
                  key: 'String',
                  label: 'String',
                  disabled: 'Boolean',
                  hidden: 'Boolean',
                },
              ],
              tooltipText: 'String',
            },
          },
          canvas18: {
            displayName: 'canvas18',
            $parentNode: 'container2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['image4'],
            $parentPageName: 'page1',
          },
          image4: {
            $dynamicAttrPaths: [],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'cover',
            displayName: 'image4',
            $parentNode: 'canvas18',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          canvas19: {
            displayName: 'canvas19',
            $parentNode: 'container2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['textarea3', 'button11', 'image5', 'text16'],
            $parentPageName: 'page1',
          },
          textarea3: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: 'textarea3',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 33,
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            value: '',
            displayName: 'textarea3',
            $parentNode: 'canvas19',
            $type: 'WIDGET',
            $widgetType: 'TEXTAREA_INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button11: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\nconst result = await textToImageEdit.trigger();\ninput4.setValue(result.data[0].url);\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo.",\nduration: 4500\n}\n);\n  }\n\n',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️ Generate',
            variant: 'fill',
            displayName: 'button11',
            $parentNode: 'canvas19',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          image5: {
            $dynamicAttrPaths: ['imageSrc', 'imageSrcByURL'],
            dynamicHeight: 'fixed',
            hidden: false,
            horizontalAlign: 'center',
            imageRadius: '8px',
            imageSrc: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            imageSrcByURL: 'https://cloud-api.illacloud.com/drive/f/d3a7ad0b-f215-49fe-96c8-1a7e65fb52e3',
            objectFit: 'contain',
            displayName: 'image5',
            $parentNode: 'canvas19',
            $type: 'WIDGET',
            $widgetType: 'IMAGE_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              imageSrc: 'String',
              altText: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
              aspectRatio: 'Number',
            },
          },
          text16: {
            $dynamicAttrPaths: [],
            colorScheme: '#8a8a8aff',
            disableMarkdown: true,
            dynamicHeight: 'fixed',
            fs: '12px',
            hidden: false,
            horizontalAlign: 'center',
            resizeDirection: 'ALL',
            value: 'Preview',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text16',
            $parentNode: 'canvas19',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas20: {
            displayName: 'canvas20',
            $parentNode: 'container2',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['textarea4', 'button12', 'text17'],
            $parentPageName: 'page1',
          },
          textarea4: {
            $dynamicAttrPaths: ['formDataKey', 'labelWidth', 'value'],
            colorScheme: 'blue',
            dynamicHeight: 'fixed',
            formDataKey: 'textarea4',
            hidden: false,
            label: 'Label',
            labelAlign: 'left',
            labelHidden: true,
            labelPosition: 'left',
            labelWidth: 33,
            placeholder: 'enter sth',
            resizeDirection: 'ALL',
            displayName: 'textarea4',
            $parentNode: 'canvas20',
            $type: 'WIDGET',
            $widgetType: 'TEXTAREA_INPUT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              defaultValue: 'String',
              placeholder: 'String',
              label: 'String',
              labelCaption: 'String',
              labelWidth: 'Number',
              disabled: 'Boolean',
              readOnly: 'Boolean',
              allowClear: 'Boolean',
              showCharacterCount: 'Boolean',
              tooltipText: 'String',
              required: 'Boolean',
              regex: 'String',
              maxLength: 'Number',
              minLength: 'Number',
              customRule: 'String',
              hideValidationMessage: 'Boolean',
              formDataKey: 'String',
              hidden: 'Boolean',
            },
          },
          button12: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'grayBlue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'events-9c839a34-3aa0-47c2-85af-425f52a2ac04',
                script: 'const result = await descriptionEdit.trigger();\n\ninput2.setValue(result[0].content);',
              },
            ],
            hiddenDynamic: true,
            text: '🤖️ Generate',
            variant: 'fill',
            displayName: 'button12',
            $parentNode: 'canvas20',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          text17: {
            $dynamicAttrPaths: ['value'],
            colorScheme: 'grayBlue',
            disableMarkdown: false,
            dynamicHeight: 'auto',
            fs: '14px',
            hidden: false,
            horizontalAlign: 'start',
            resizeDirection: 'HORIZONTAL',
            verticalAlign: 'center',
            weight: 400,
            displayName: 'text17',
            $parentNode: 'canvas20',
            $type: 'WIDGET',
            $widgetType: 'TEXT_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              value: 'String',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          canvas21: {
            displayName: 'canvas21',
            $parentNode: 'modal3',
            $type: 'WIDGET',
            $widgetType: 'CANVAS',
            $childrenNode: ['button13'],
            $parentPageName: 'page1',
          },
          button13: {
            $dynamicAttrPaths: ['events[0].script', 'loading'],
            colorScheme: 'blue',
            events: [
              {
                actionType: 'script',
                eventType: 'click',
                id: 'cf57950d-01c9-46c9-b099-62ebe74d77de',
                script:
                  'if(currentUserInfo===undefined||currentUserInfo.email===undefined){\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n}\nelse if(currentUserInfo.email.endsWith("@illasoft.com")){\n\nconst result = await updateData.trigger();\n\nconst result1 = await listData.trigger();\n\ncontainer2.setCurrentViewKey("View 1");\nmodal3.closeModal();\n  }else{\n  utils.showNotification(\n{\ntype: "info",\ntitle: "Thanks for using this demo",\ndescription: "Only ILLA Cloud internal members are allowed to perform write operations in this demo. Please fork this template and connect to your datasource to try it",\nduration: 4500\n}\n);\n  }\n\n',
              },
            ],
            hidden: false,
            loading: false,
            text: 'Add',
            variant: 'fill',
            displayName: 'button13',
            $parentNode: 'canvas21',
            $type: 'WIDGET',
            $widgetType: 'BUTTON_WIDGET',
            $childrenNode: [],
            $parentPageName: 'page1',
            $validationPaths: {
              text: 'String',
              events: [
                {
                  widgetSwitchTargetValue: 'Boolean',
                  pageIndex: 'Number',
                  sortKey: 'String',
                  sortOrder: 'String',
                  filters: 'Array',
                  operator: 'String',
                  disabled: 'Boolean',
                  script: 'String',
                  url: 'String',
                  newTab: 'Boolean',
                  key: 'String',
                  index: 'Number',
                  showNextViewLoopBack: 'Boolean',
                  showNextVisibleViewLoopBack: 'Boolean',
                  showPreviousViewLoopBack: 'Boolean',
                  showPreviousVisibleViewLoopBack: 'Boolean',
                  title: 'String',
                  description: 'String',
                  pagePath: 'String',
                  viewPath: 'String',
                  duration: 'Number',
                  fileName: 'String',
                  fileType: 'String',
                  enabled: 'Boolean',
                  widgetTargetValue: 'String',
                },
              ],
              loading: 'Boolean',
              disabled: 'Boolean',
              tooltipText: 'String',
              hidden: 'Boolean',
            },
          },
          builderInfo: {
            version: '4.8.5',
            language: 'English',
          },
          currentUserInfo: {
            userID: 'ILAdx4p1C7Jf',
            nickname: 'peterjaberau',
            email: 'peterjaberau@gmail.com',
            language: 'en-US',
            createdAt: '2023-09-03T16:08:43.784752Z',
            updatedAt: '2023-09-03T16:09:19.977646Z',
          },
          globalData: {
            $dynamicAttrPaths: [],
          },
          urlParams: {
            query: {},
            url: 'https://builder.illacloud.com/private/app/ILAbx4p1C7z5',
            appURL: 'https://builder.illacloud.com/private/app/ILAbx4p1C7z5',
          },
          localStorage: {},
          currentPageInfo: {
            pagePath: 'page1',
            $dynamicAttrPaths: ['pagePath', 'subPagePath'],
          },
          pageInfos: [
            {
              pagePath: '/page1',
              subPagePath: '/page1/sub-page1',
              pageName: 'page1',
              subPageName: 'sub-page1',
              isHomePage: true,
              subPageGroup: '',
            },
          ],
        },
        error: {
          'text17.value': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading '0')",
              errorName: 'TypeError',
            },
          ],
          'tags.value': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'forEach')",
              errorName: 'TypeError',
            },
          ],
          'multiselect2.mappedOption.values': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'multiselect2.mappedOption.labels': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'image1.imageSrcByURL': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'image')",
              errorName: 'TypeError',
            },
          ],
          'image1.imageSrc': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'image')",
              errorName: 'TypeError',
            },
          ],
          'text13.value': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'label')",
              errorName: 'TypeError',
            },
          ],
          'text14.value': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading '0')",
              errorName: 'TypeError',
            },
          ],
          'multiselect1.mappedOption.values': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'multiselect1.mappedOption.labels': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'select1.mappedOption.values': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'select1.mappedOption.labels': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'dataGrid1.columns[2].labelCaption': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'dataGrid1.columns[2].label': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'dataGrid1.columns[2].imageSrc': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'map')",
              errorName: 'TypeError',
            },
          ],
          'dataGrid1.columns[5].events[0].url': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'url')",
              errorName: 'TypeError',
            },
          ],
          'updateData.content.query': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'id')",
              errorName: 'TypeError',
            },
          ],
          'listFiles.content.commandArgs.search': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading '0')",
              errorName: 'TypeError',
            },
          ],
          'listFilesEdit.content.commandArgs.search': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'files')",
              errorName: 'TypeError',
            },
          ],
          'uploadFilesEdit.content.commandArgs.fileName': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'files')",
              errorName: 'TypeError',
            },
          ],
          'uploadFilesEdit.content.commandArgs.fileData': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'value')",
              errorName: 'TypeError',
            },
          ],
          'uploadFiles.content.commandArgs.fileName': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading '0')",
              errorName: 'TypeError',
            },
          ],
          'uploadFiles.content.commandArgs.fileData': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading '0')",
              errorName: 'TypeError',
            },
          ],
          'deleteData.content.query': [
            {
              errorType: 'EVALUATED',
              errorMessage: "Cannot read properties of undefined (reading 'id')",
              errorName: 'TypeError',
            },
          ],
        },
        independencies: {
          'root.currentSubPagePath': ['currentPageInfo.subPagePath'],
          'root.pageSortedKey': ['currentPageInfo.pagePath'],
          'root.currentPageIndex': ['currentPageInfo.pagePath'],
          'updateData.isRunning': ['button13.loading'],
          'listData.isRunning': ['button13.loading', 'button1.loading', 'button4.loading', 'dataGrid1.loading'],
          currentUserInfo: [
            'button13.events[0].script',
            'button11.events[0].script',
            'upload2.events[0].script',
            'button1.events[0].script',
            'button4.events[0].script',
            'button9.events[0].script',
            'upload1.events[0].script',
          ],
          undefined: [
            'button13.events[0].script',
            'image5.imageSrcByURL',
            'image5.imageSrc',
            'button11.events[0].script',
            'upload2.events[0].script',
            'button1.events[0].script',
            'button4.events[0].script',
            'image3.imageSrcByURL',
            'image3.imageSrc',
            'button9.events[0].script',
            'upload1.events[0].script',
          ],
          'currentUserInfo.email': [
            'button13.events[0].script',
            'button11.events[0].script',
            'upload2.events[0].script',
            'button1.events[0].script',
            'button4.events[0].script',
            'button9.events[0].script',
            'upload1.events[0].script',
          ],
          'utils.showNotification': [
            'button13.events[0].script',
            'button11.events[0].script',
            'upload2.events[0].script',
            'button1.events[0].script',
            'button4.events[0].script',
            'button9.events[0].script',
            'upload1.events[0].script',
          ],
          'currentUserInfo.email.endsWith': [
            'button13.events[0].script',
            'button11.events[0].script',
            'upload2.events[0].script',
            'button1.events[0].script',
            'button4.events[0].script',
            'button9.events[0].script',
            'upload1.events[0].script',
          ],
          'updateData.trigger': ['button13.events[0].script'],
          'listData.trigger': ['button13.events[0].script', 'button1.events[0].script', 'button4.events[0].script'],
          'container2.setCurrentViewKey': [
            'button13.events[0].script',
            'button6.events[0].script',
            'button5.events[0].script',
            'icon2.events[0].script',
          ],
          'modal3.closeModal': ['button13.events[0].script', 'icon2.events[0].script'],
          'descriptionEdit.data[0].content': ['text17.value'],
          'descriptionEdit.data[0]': ['text17.value'],
          'descriptionEdit.data': ['text17.value'],
          'descriptionEdit.isRunning': ['button12.loading'],
          'descriptionEdit.trigger': ['button12.events[0].script'],
          'input2.setValue': ['button12.events[0].script', 'button10.events[0].script'],
          'result[0].content': ['button12.events[0].script', 'button10.events[0].script'],
          'result[0]': ['button12.events[0].script', 'button10.events[0].script'],
          'textarea4.displayName': ['textarea4.formDataKey'],
          'textToImageEdit.data': ['image5.imageSrcByURL', 'image5.imageSrc'],
          'textToImageEdit.data.data[0].url': ['image5.imageSrcByURL', 'image5.imageSrc'],
          'textToImageEdit.data.data[0]': ['image5.imageSrcByURL', 'image5.imageSrc'],
          'textToImageEdit.data.data': ['image5.imageSrcByURL', 'image5.imageSrc'],
          'textToImageEdit.isRunning': ['button11.loading'],
          'textToImageEdit.trigger': ['button11.events[0].script'],
          'input4.setValue': ['button11.events[0].script', 'button9.events[0].script', 'upload1.events[0].script'],
          'result.data[0].url': ['button11.events[0].script', 'button9.events[0].script'],
          'result.data[0]': ['button11.events[0].script', 'button9.events[0].script'],
          'result.data': ['button11.events[0].script', 'button9.events[0].script'],
          'textarea3.displayName': ['textarea3.formDataKey'],
          'uploadFilesEdit.isRunning': ['upload2.loading'],
          'listFilesEdit.isRuning': ['upload2.loading'],
          'upload2.displayName': ['upload2.formDataKey'],
          'uploadFilesEdit.trigger': ['upload2.events[0].script'],
          'listFilesEdit.trigger': ['upload2.events[0].script'],
          'input9.setValue': ['upload2.events[0].script'],
          'list[0].tinyURL': ['upload2.events[0].script', 'upload1.events[0].script'],
          'list[0]': ['upload2.events[0].script', 'upload1.events[0].script'],
          'input9.displayName': ['input9.formDataKey'],
          'listData.data': ['tags.value', 'dataGrid1.dataSourceJS'],
          Set: ['tags.value'],
          'objectsArray.forEach': ['tags.value'],
          'obj.tags.forEach': ['tags.value'],
          'obj.tags': ['tags.value'],
          'tagsSet.add': ['tags.value'],
          'Array.from': ['tags.value'],
          'tags.value': ['multiselect2.dataSources', 'multiselect1.dataSources', 'select1.dataSources'],
          'multiselect2.dataSources.map': ['multiselect2.mappedOption.values', 'multiselect2.mappedOption.labels'],
          'multiselect2.dataSources': ['multiselect2.mappedOption.values', 'multiselect2.mappedOption.labels'],
          'multiselect2.displayName': ['multiselect2.formDataKey'],
          'input8.displayName': ['input8.formDataKey'],
          'input7.displayName': ['input7.formDataKey'],
          'input3.displayName': ['input3.formDataKey'],
          'deleteData.trigger': ['button1.events[0].script'],
          'modal1.closeModal': ['button1.events[0].script', 'icon3.events[0].script'],
          'deleteData.isRunning': ['button1.loading'],
          'dataGrid1.selectedRows[0].image': ['image1.imageSrcByURL', 'image1.imageSrc'],
          'dataGrid1.selectedRows[0]': [
            'image1.imageSrcByURL',
            'image1.imageSrc',
            'text13.value',
            'dataGrid1.columns[5].events[0].url',
            'updateData.content.query',
            'deleteData.content.query',
          ],
          'dataGrid1.selectedRows': [
            'image1.imageSrcByURL',
            'image1.imageSrc',
            'text13.value',
            'dataGrid1.columns[5].events[0].url',
            'updateData.content.query',
            'deleteData.content.query',
          ],
          'dataGrid1.selectedRows[0].label': ['text13.value'],
          'insertData.trigger': ['button4.events[0].script'],
          'container1.setCurrentViewKey': [
            'button4.events[0].script',
            'button7.events[0].script',
            'button8.events[0].script',
            'icon1.events[0].script',
          ],
          'modal2.closeModal': ['button4.events[0].script', 'icon1.events[0].script'],
          'insertData.isRunning': ['button4.loading'],
          'description.data[0].content': ['text14.value'],
          'description.data[0]': ['text14.value'],
          'description.data': ['text14.value'],
          'description.isRunning': ['button10.loading'],
          'description.trigger': ['button10.events[0].script'],
          'textarea2.displayName': ['textarea2.formDataKey'],
          'textToImage.data': ['image3.imageSrcByURL', 'image3.imageSrc'],
          'textToImage.data.data[0].url': ['image3.imageSrcByURL', 'image3.imageSrc'],
          'textToImage.data.data[0]': ['image3.imageSrcByURL', 'image3.imageSrc'],
          'textToImage.data.data': ['image3.imageSrcByURL', 'image3.imageSrc'],
          'textToImage.isRunning': ['button9.loading'],
          'textToImage.trigger': ['button9.events[0].script'],
          'textarea1.displayName': ['textarea1.formDataKey'],
          'uploadFiles.trigger': ['upload1.events[0].script'],
          'listFiles.trigger': ['upload1.events[0].script'],
          'uploadFiles.isRunning': ['upload1.loading'],
          'listFiles.isRuning': ['upload1.loading'],
          'upload1.displayName': ['upload1.formDataKey'],
          'input4.displayName': ['input4.formDataKey'],
          'multiselect1.dataSources.map': ['multiselect1.mappedOption.values', 'multiselect1.mappedOption.labels'],
          'multiselect1.dataSources': ['multiselect1.mappedOption.values', 'multiselect1.mappedOption.labels'],
          'multiselect1.displayName': ['multiselect1.formDataKey'],
          'input2.displayName': ['input2.formDataKey'],
          'input6.displayName': ['input6.formDataKey'],
          'input5.displayName': ['input5.formDataKey'],
          'input1.displayName': ['input1.formDataKey'],
          'select1.dataSources.map': ['select1.mappedOption.values', 'select1.mappedOption.labels'],
          'select1.dataSources': ['select1.mappedOption.values', 'select1.mappedOption.labels'],
          'select1.displayName': ['select1.formDataKey'],
          'dataGrid1.dataSourceJS.map': [
            'dataGrid1.columns[2].labelCaption',
            'dataGrid1.columns[2].label',
            'dataGrid1.columns[2].imageSrc',
          ],
          'dataGrid1.dataSourceJS': [
            'dataGrid1.columns[2].labelCaption',
            'dataGrid1.columns[2].label',
            'dataGrid1.columns[2].imageSrc',
          ],
          'currentRow.description': ['dataGrid1.columns[2].labelCaption'],
          'currentRow.label': ['dataGrid1.columns[2].label'],
          'currentRow.image': ['dataGrid1.columns[2].imageSrc'],
          'dataGrid1.selectedRows[0].url': ['dataGrid1.columns[5].events[0].url'],
          'input3.value': ['updateData.content.query', 'textarea4.value'],
          'input9.value': ['updateData.content.query'],
          'input8.value': ['updateData.content.query'],
          'input7.value': ['updateData.content.query'],
          'multiselect2.value': ['updateData.content.query'],
          'dataGrid1.selectedRows[0].id': ['updateData.content.query', 'deleteData.content.query'],
          name: ['descriptionEdit.content.virtualResource.prompt', 'description.content.virtualResource.prompt'],
          'textarea4.value': ['descriptionEdit.content.variables[0].value'],
          'input5.value': ['textarea2.value', 'insertData.content.query'],
          'textarea2.value': ['description.content.variables[0].value'],
          'upload1.files[0].name': ['listFiles.content.commandArgs.search', 'uploadFiles.content.commandArgs.fileName'],
          'upload1.files[0]': ['listFiles.content.commandArgs.search', 'uploadFiles.content.commandArgs.fileName'],
          'upload1.files': ['listFiles.content.commandArgs.search', 'uploadFiles.content.commandArgs.fileName'],
          'upload3.files[0].name': [
            'listFilesEdit.content.commandArgs.search',
            'uploadFilesEdit.content.commandArgs.fileName',
          ],
          'upload3.files[0]': [
            'listFilesEdit.content.commandArgs.search',
            'uploadFilesEdit.content.commandArgs.fileName',
          ],
          'upload3.files': ['listFilesEdit.content.commandArgs.search', 'uploadFilesEdit.content.commandArgs.fileName'],
          'upload3.value[0]': ['uploadFilesEdit.content.commandArgs.fileData'],
          'upload3.value': ['uploadFilesEdit.content.commandArgs.fileData'],
          'upload1.value[0]': ['uploadFiles.content.commandArgs.fileData'],
          'upload1.value': ['uploadFiles.content.commandArgs.fileData'],
          'select1.value': ['listData.content.query', 'listData.content.query'],
          'input1.value': [
            'listData.content.query',
            'listData.content.query',
            'listData.content.query',
            'listData.content.query',
            'listData.content.query',
          ],
          'input4.value': ['insertData.content.query'],
          'input6.value': ['insertData.content.query'],
          'input2.value': ['insertData.content.query'],
          'multiselect1.value': ['insertData.content.query'],
          'textarea1.value': ['textToImage.content.body.content'],
          'textarea3.value': ['textToImageEdit.content.body.content'],
        },
      },
      cursor: {},
      dragShadow: {},
      layoutInfo: {
        widgetsLayoutInfo: {
          root: {
            displayName: 'root',
            parentNode: '',
            widgetType: 'DOT_PANEL',
            childrenNode: ['page1'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          page1: {
            displayName: 'page1',
            parentNode: 'root',
            widgetType: 'PAGE_NODE',
            childrenNode: ['bodySection1', 'modalSection1'],
            containerType: 'EDITOR_PAGE_SQUARE',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          bodySection1: {
            displayName: 'bodySection1',
            parentNode: 'page1',
            widgetType: 'SECTION_NODE',
            childrenNode: ['bodySection1-bodySectionContainer1'],
            containerType: 'EDITOR_LAYOUT_SQUARE',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          'bodySection1-bodySectionContainer1': {
            displayName: 'bodySection1-bodySectionContainer1',
            parentNode: 'bodySection1',
            widgetType: 'CONTAINER_NODE',
            childrenNode: ['container3', 'container4', 'select1', 'button3', 'input1'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          container3: {
            displayName: 'container3',
            parentNode: 'bodySection1-bodySectionContainer1',
            widgetType: 'CONTAINER_WIDGET',
            childrenNode: ['canvas12', 'canvas13', 'canvas14'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 28,
              minW: 1,
              minH: 3,
            },
          },
          canvas12: {
            displayName: 'canvas12',
            parentNode: 'container3',
            widgetType: 'CANVAS',
            childrenNode: ['text4', 'image6', 'container5'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text4: {
            displayName: 'text4',
            parentNode: 'canvas12',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 8,
              z: 0,
              w: 15,
              h: 7,
              minW: 1,
              minH: 3,
            },
          },
          image6: {
            displayName: 'image6',
            parentNode: 'canvas12',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 21,
              y: 0,
              z: 0,
              w: 11,
              h: 26,
              minW: 1,
              minH: 3,
            },
          },
          container5: {
            displayName: 'container5',
            parentNode: 'canvas12',
            widgetType: 'CONTAINER_WIDGET',
            childrenNode: ['canvas22'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 15,
              z: 0,
              w: 17,
              h: 9,
              minW: 1,
              minH: 3,
            },
          },
          canvas22: {
            displayName: 'canvas22',
            parentNode: 'container5',
            widgetType: 'CANVAS',
            childrenNode: ['text19'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text19: {
            displayName: 'text19',
            parentNode: 'canvas22',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 7,
              minW: 1,
              minH: 3,
            },
          },
          canvas13: {
            displayName: 'canvas13',
            parentNode: 'container3',
            widgetType: 'CANVAS',
            childrenNode: [],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          canvas14: {
            displayName: 'canvas14',
            parentNode: 'container3',
            widgetType: 'CANVAS',
            childrenNode: [],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          container4: {
            displayName: 'container4',
            parentNode: 'bodySection1-bodySectionContainer1',
            widgetType: 'CONTAINER_WIDGET',
            childrenNode: ['canvas11', 'canvas16', 'canvas17'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 37,
              z: 0,
              w: 32,
              h: 88,
              minW: 1,
              minH: 3,
            },
          },
          canvas11: {
            displayName: 'canvas11',
            parentNode: 'container4',
            widgetType: 'CANVAS',
            childrenNode: ['text7', 'dataGrid1'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text7: {
            displayName: 'text7',
            parentNode: 'canvas11',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 10,
              minW: 1,
              minH: 3,
            },
          },
          dataGrid1: {
            displayName: 'dataGrid1',
            parentNode: 'canvas11',
            widgetType: 'DATA_GRID_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 10,
              z: 0,
              w: 32,
              h: 73,
              minW: 1,
              minH: 3,
            },
          },
          canvas16: {
            displayName: 'canvas16',
            parentNode: 'container4',
            widgetType: 'CANVAS',
            childrenNode: [],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          canvas17: {
            displayName: 'canvas17',
            parentNode: 'container4',
            widgetType: 'CANVAS',
            childrenNode: [],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          select1: {
            displayName: 'select1',
            parentNode: 'bodySection1-bodySectionContainer1',
            widgetType: 'SELECT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 30,
              z: 0,
              w: 9,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          button3: {
            displayName: 'button3',
            parentNode: 'bodySection1-bodySectionContainer1',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 25,
              y: 30,
              z: 0,
              w: 7,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          input1: {
            displayName: 'input1',
            parentNode: 'bodySection1-bodySectionContainer1',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 10,
              y: 30,
              z: 0,
              w: 14,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          modalSection1: {
            displayName: 'modalSection1',
            parentNode: 'page1',
            widgetType: 'MODAL_SECTION_NODE',
            childrenNode: ['modal2', 'modal1', 'modal3'],
            containerType: 'EDITOR_LAYOUT_SQUARE',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          modal2: {
            displayName: 'modal2',
            parentNode: 'modalSection1',
            widgetType: 'MODAL_WIDGET',
            childrenNode: ['canvas4', 'canvas5', 'canvas6'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 55,
              z: 0,
              w: 27,
              h: 68,
              minW: 1,
              minH: 3,
            },
          },
          canvas4: {
            displayName: 'canvas4',
            parentNode: 'modal2',
            widgetType: 'CANVAS',
            childrenNode: ['text2'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text2: {
            displayName: 'text2',
            parentNode: 'canvas4',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 5,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          canvas5: {
            displayName: 'canvas5',
            parentNode: 'modal2',
            widgetType: 'CANVAS',
            childrenNode: [
              'input5',
              'input6',
              'text3',
              'icon1',
              'input2',
              'multiselect1',
              'input4',
              'upload1',
              'button8',
              'button7',
              'text5',
              'text6',
              'container1',
            ],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          input5: {
            displayName: 'input5',
            parentNode: 'canvas5',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 20,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          input6: {
            displayName: 'input6',
            parentNode: 'canvas5',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 38,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          text3: {
            displayName: 'text3',
            parentNode: 'canvas5',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 0,
              z: 0,
              w: 6,
              h: 10,
              minW: 1,
              minH: 3,
            },
          },
          icon1: {
            displayName: 'icon1',
            parentNode: 'canvas5',
            widgetType: 'ICON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 30,
              y: 3,
              z: 0,
              w: 1,
              h: 4,
              minW: 1,
              minH: 3,
            },
          },
          input2: {
            displayName: 'input2',
            parentNode: 'canvas5',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 33,
              z: 0,
              w: 17,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          multiselect1: {
            displayName: 'multiselect1',
            parentNode: 'canvas5',
            widgetType: 'MULTISELECT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 46,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          input4: {
            displayName: 'input4',
            parentNode: 'canvas5',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 15,
              z: 0,
              w: 17,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          upload1: {
            displayName: 'upload1',
            parentNode: 'canvas5',
            widgetType: 'UPLOAD_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 11,
              y: 10,
              z: 0,
              w: 4,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          button8: {
            displayName: 'button8',
            parentNode: 'canvas5',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 15,
              y: 10,
              z: 0,
              w: 3,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          button7: {
            displayName: 'button7',
            parentNode: 'canvas5',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 15,
              y: 28,
              z: 0,
              w: 3,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text5: {
            displayName: 'text5',
            parentNode: 'canvas5',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 10,
              z: 0,
              w: 10,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text6: {
            displayName: 'text6',
            parentNode: 'canvas5',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 28,
              z: 0,
              w: 10,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          container1: {
            displayName: 'container1',
            parentNode: 'canvas5',
            widgetType: 'CONTAINER_WIDGET',
            childrenNode: ['canvas7', 'canvas8', 'canvas9'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 19,
              y: 10,
              z: 0,
              w: 12,
              h: 44,
              minW: 1,
              minH: 3,
            },
          },
          canvas7: {
            displayName: 'canvas7',
            parentNode: 'container1',
            widgetType: 'CANVAS',
            childrenNode: ['image2'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          image2: {
            displayName: 'image2',
            parentNode: 'canvas7',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 36,
              minW: 1,
              minH: 3,
            },
          },
          canvas8: {
            displayName: 'canvas8',
            parentNode: 'container1',
            widgetType: 'CANVAS',
            childrenNode: ['textarea1', 'button9', 'image3', 'text8'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          textarea1: {
            displayName: 'textarea1',
            parentNode: 'canvas8',
            widgetType: 'TEXTAREA_INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 11,
              minW: 1,
              minH: 3,
            },
          },
          button9: {
            displayName: 'button9',
            parentNode: 'canvas8',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 11,
              z: 0,
              w: 16,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          image3: {
            displayName: 'image3',
            parentNode: 'canvas8',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 21,
              z: 0,
              w: 32,
              h: 15,
              minW: 1,
              minH: 3,
            },
          },
          text8: {
            displayName: 'text8',
            parentNode: 'canvas8',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 17,
              z: 0,
              w: 16,
              h: 4,
              minW: 1,
              minH: 3,
            },
          },
          canvas9: {
            displayName: 'canvas9',
            parentNode: 'container1',
            widgetType: 'CANVAS',
            childrenNode: ['textarea2', 'button10', 'text14'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          textarea2: {
            displayName: 'textarea2',
            parentNode: 'canvas9',
            widgetType: 'TEXTAREA_INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 11,
              minW: 1,
              minH: 3,
            },
          },
          button10: {
            displayName: 'button10',
            parentNode: 'canvas9',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 9,
              y: 11,
              z: 0,
              w: 16,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text14: {
            displayName: 'text14',
            parentNode: 'canvas9',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 16,
              z: 0,
              w: 32,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          canvas6: {
            displayName: 'canvas6',
            parentNode: 'modal2',
            widgetType: 'CANVAS',
            childrenNode: ['button4'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          button4: {
            displayName: 'button4',
            parentNode: 'canvas6',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 1,
              z: 0,
              w: 16,
              h: 6,
              minW: 1,
              minH: 3,
            },
          },
          modal1: {
            displayName: 'modal1',
            parentNode: 'modalSection1',
            widgetType: 'MODAL_WIDGET',
            childrenNode: ['canvas1', 'canvas2', 'canvas3'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 24,
              h: 55,
              minW: 1,
              minH: 3,
            },
          },
          canvas1: {
            displayName: 'canvas1',
            parentNode: 'modal1',
            widgetType: 'CANVAS',
            childrenNode: [],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          canvas2: {
            displayName: 'canvas2',
            parentNode: 'modal1',
            widgetType: 'CANVAS',
            childrenNode: ['text9', 'text12', 'text13', 'image1', 'icon3', 'text18'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text9: {
            displayName: 'text9',
            parentNode: 'canvas2',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 10,
              z: 0,
              w: 31,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text12: {
            displayName: 'text12',
            parentNode: 'canvas2',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 37,
              z: 0,
              w: 31,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text13: {
            displayName: 'text13',
            parentNode: 'canvas2',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 15,
              z: 0,
              w: 31,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          image1: {
            displayName: 'image1',
            parentNode: 'canvas2',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 20,
              z: 0,
              w: 7,
              h: 17,
              minW: 1,
              minH: 3,
            },
          },
          icon3: {
            displayName: 'icon3',
            parentNode: 'canvas2',
            widgetType: 'ICON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 29,
              y: 2,
              z: 0,
              w: 2,
              h: 4,
              minW: 1,
              minH: 3,
            },
          },
          text18: {
            displayName: 'text18',
            parentNode: 'canvas2',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 0,
              z: 0,
              w: 14,
              h: 10,
              minW: 1,
              minH: 3,
            },
          },
          canvas3: {
            displayName: 'canvas3',
            parentNode: 'modal1',
            widgetType: 'CANVAS',
            childrenNode: ['button1'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          button1: {
            displayName: 'button1',
            parentNode: 'canvas3',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 11,
              y: 0,
              z: 0,
              w: 10,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          modal3: {
            displayName: 'modal3',
            parentNode: 'modalSection1',
            widgetType: 'MODAL_WIDGET',
            childrenNode: ['canvas10', 'canvas15', 'canvas21'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 123,
              z: 0,
              w: 27,
              h: 68,
              minW: 1,
              minH: 3,
            },
          },
          canvas10: {
            displayName: 'canvas10',
            parentNode: 'modal3',
            widgetType: 'CANVAS',
            childrenNode: ['text1'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          text1: {
            displayName: 'text1',
            parentNode: 'canvas10',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 5,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          canvas15: {
            displayName: 'canvas15',
            parentNode: 'modal3',
            widgetType: 'CANVAS',
            childrenNode: [
              'input3',
              'input7',
              'text10',
              'icon2',
              'input8',
              'multiselect2',
              'input9',
              'upload2',
              'button5',
              'button6',
              'text11',
              'text15',
              'container2',
            ],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          input3: {
            displayName: 'input3',
            parentNode: 'canvas15',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 20,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          input7: {
            displayName: 'input7',
            parentNode: 'canvas15',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 38,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          text10: {
            displayName: 'text10',
            parentNode: 'canvas15',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 0,
              z: 0,
              w: 6,
              h: 10,
              minW: 1,
              minH: 3,
            },
          },
          icon2: {
            displayName: 'icon2',
            parentNode: 'canvas15',
            widgetType: 'ICON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 30,
              y: 3,
              z: 0,
              w: 1,
              h: 4,
              minW: 1,
              minH: 3,
            },
          },
          input8: {
            displayName: 'input8',
            parentNode: 'canvas15',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 33,
              z: 0,
              w: 17,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          multiselect2: {
            displayName: 'multiselect2',
            parentNode: 'canvas15',
            widgetType: 'MULTISELECT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 46,
              z: 0,
              w: 17,
              h: 8,
              minW: 1,
              minH: 3,
            },
          },
          input9: {
            displayName: 'input9',
            parentNode: 'canvas15',
            widgetType: 'INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 15,
              z: 0,
              w: 17,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          upload2: {
            displayName: 'upload2',
            parentNode: 'canvas15',
            widgetType: 'UPLOAD_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 11,
              y: 10,
              z: 0,
              w: 4,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          button5: {
            displayName: 'button5',
            parentNode: 'canvas15',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 15,
              y: 10,
              z: 0,
              w: 3,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          button6: {
            displayName: 'button6',
            parentNode: 'canvas15',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 15,
              y: 28,
              z: 0,
              w: 3,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text11: {
            displayName: 'text11',
            parentNode: 'canvas15',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 10,
              z: 0,
              w: 10,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text15: {
            displayName: 'text15',
            parentNode: 'canvas15',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 1,
              y: 28,
              z: 0,
              w: 10,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          container2: {
            displayName: 'container2',
            parentNode: 'canvas15',
            widgetType: 'CONTAINER_WIDGET',
            childrenNode: ['canvas18', 'canvas19', 'canvas20'],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 19,
              y: 10,
              z: 0,
              w: 12,
              h: 44,
              minW: 1,
              minH: 3,
            },
          },
          canvas18: {
            displayName: 'canvas18',
            parentNode: 'container2',
            widgetType: 'CANVAS',
            childrenNode: ['image4'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          image4: {
            displayName: 'image4',
            parentNode: 'canvas18',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 36,
              minW: 1,
              minH: 3,
            },
          },
          canvas19: {
            displayName: 'canvas19',
            parentNode: 'container2',
            widgetType: 'CANVAS',
            childrenNode: ['textarea3', 'button11', 'image5', 'text16'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          textarea3: {
            displayName: 'textarea3',
            parentNode: 'canvas19',
            widgetType: 'TEXTAREA_INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 11,
              minW: 1,
              minH: 3,
            },
          },
          button11: {
            displayName: 'button11',
            parentNode: 'canvas19',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 11,
              z: 0,
              w: 16,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          image5: {
            displayName: 'image5',
            parentNode: 'canvas19',
            widgetType: 'IMAGE_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 21,
              z: 0,
              w: 32,
              h: 15,
              minW: 1,
              minH: 3,
            },
          },
          text16: {
            displayName: 'text16',
            parentNode: 'canvas19',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 17,
              z: 0,
              w: 16,
              h: 4,
              minW: 1,
              minH: 3,
            },
          },
          canvas20: {
            displayName: 'canvas20',
            parentNode: 'container2',
            widgetType: 'CANVAS',
            childrenNode: ['textarea4', 'button12', 'text17'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          textarea4: {
            displayName: 'textarea4',
            parentNode: 'canvas20',
            widgetType: 'TEXTAREA_INPUT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 0,
              z: 0,
              w: 32,
              h: 11,
              minW: 1,
              minH: 3,
            },
          },
          button12: {
            displayName: 'button12',
            parentNode: 'canvas20',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 9,
              y: 11,
              z: 0,
              w: 16,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          text17: {
            displayName: 'text17',
            parentNode: 'canvas20',
            widgetType: 'TEXT_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 0,
              y: 16,
              z: 0,
              w: 32,
              h: 5,
              minW: 1,
              minH: 3,
            },
          },
          canvas21: {
            displayName: 'canvas21',
            parentNode: 'modal3',
            widgetType: 'CANVAS',
            childrenNode: ['button13'],
            containerType: 'EDITOR_DOT_PANEL',
            layoutInfo: {
              x: -1,
              y: -1,
              z: 0,
              w: 0,
              h: 0,
              minW: 1,
              minH: 0,
            },
          },
          button13: {
            displayName: 'button13',
            parentNode: 'canvas21',
            widgetType: 'BUTTON_WIDGET',
            childrenNode: [],
            containerType: 'EDITOR_SCALE_SQUARE',
            layoutInfo: {
              x: 8,
              y: 1,
              z: 0,
              w: 16,
              h: 6,
              minW: 1,
              minH: 3,
            },
          },
        },
      },
    },
    currentAppHistory: {
      snapshotList: [],
      totalPages: 0,
      currentPage: 0,
      hasMore: false,
    },
    builderInfo: {
      version: '4.8.5',
      language: 'English',
    },
    resource: [
      {
        resourceID: 'ILAgx4p1C7mZ',
        uid: '7af863f5-6bda-4fd7-be7f-d5f441b6ab16',
        teamID: 'ILAgx4p1C7CH',
        resourceName: 'api1',
        resourceType: 'restapi',
        content: {
          authContent: {},
          authentication: 'none',
          baseUrl: 'https://dummyjson.com/products/',
          certs: {
            caCert: '',
            clientCert: '',
            clientKey: '',
            mode: 'verify-full',
          },
          cookies: [
            {
              key: '',
              value: '',
            },
          ],
          headers: [
            {
              key: '',
              value: '',
            },
          ],
          selfSignedCert: false,
          urlParams: [
            {
              key: '',
              value: '',
            },
          ],
        },
        createdAt: '2023-09-04T06:28:23.328408Z',
        createdBy: 'ILAdx4p1C7Jf',
        updatedAt: '2023-09-04T06:28:23.328408Z',
        updatedBy: 'ILAdx4p1C7Jf',
      },
    ],
    guide: {
      currentStep: 0,
      isOpen: false,
    },
    currentUser: {
      userID: 'ILAdx4p1C7Jf',
      uid: '0e1b3486-9743-4c99-81a6-4da6b453cf85',
      nickname: 'peterjaberau',
      email: 'peterjaberau@gmail.com',
      avatar: '',
      language: 'en-US',
      isTutorialViewed: true,
      isSubscribed: true,
      isPasswordSet: true,
      ssoVerified: {
        github: true,
        google: false,
      },
      haveAppSumoSubscription: false,
      doesAppSumoSubscriptionAppliedToTeam: false,
      promotionCode: null,
      createdAt: '2023-09-03T16:08:43.784752Z',
      updatedAt: '2023-09-03T16:09:19.977646Z',
    },
    team: {
      currentId: 'ILAgx4p1C7CH',
      items: [
        {
          id: 'ILAgx4p1C7CH',
          uid: '68c63670-7de2-406a-a320-80b560e3ed80',
          name: 'private',
          identifier: 'private',
          icon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          myRole: 1,
          teamMemberID: 'ILAgx4p1C7le',
          teamMemberPermission: {
            config: 0,
          },
          permission: {
            allowEditorInvite: true,
            allowViewerInvite: true,
            allowEditorManageTeamMember: true,
            allowViewerManageTeamMember: true,
            inviteLinkEnabled: true,
          },
          personalConfig: {
            teamLicenseSubscribeExpiredPopupShowed: true,
            teamLicenseSubscribeExpiredBannerShowed: true,
          },
          currentTeamLicense: {
            volume: 1,
            volumeConverted: 1,
            balance: 0,
            balanceConverted: 0,
            plan: 'team_license_free',
            quantity: 1,
            cycle: 0,
          },
          appSumoTeamLicense: null,
          totalTeamLicense: {
            volume: 1,
            balance: 0,
            teamLicensePurchased: false,
            teamLicenseAllPaid: false,
          },
          colla: {
            volume: 0,
            volumeConverted: 0,
            balance: 999550000,
            balanceConverted: 999.55,
            plan: 'colla_free',
            quantity: 0,
            cycle: 0,
          },
          customInfo: {
            customDomain: '',
            favicon: '',
            title: '',
          },
        },
      ],
    },
    aiAgent: {
      list: [
        {
          aiAgentID: 'ILAfx4p1C7J3',
          uid: '8f3fa2c0-99bf-4ea6-bf32-ad780403a5fb',
          teamID: 'ILAgx4p1C7CH',
          teamName: 'private',
          teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          teamIdentifier: 'private',
          name: 'brief',
          model: 1,
          agentType: 1,
          publishedToMarketplace: false,
          icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
          description: 'brief',
          prompt: 'Write a brief within160 characters about {{name}}',
          variables: [
            {
              key: 'name',
              value: 'test',
              defaultValue: '',
            },
          ],
          modelConfig: {
            suffix: '',
            maxTokens: 2048,
            temperature: 1,
            top_p: 0,
            n: 0,
            stream: true,
            logprobs: 0,
            echo: false,
            Stop: null,
            presence_penalty: 0,
            frequency_penalty: 0,
            best_of: 0,
            logit_bias: null,
            user: '',
            SettedMap: {
              Suffix: false,
              MaxTokens: true,
              Temperature: true,
              TopP: false,
              N: false,
              Stream: true,
              Logprobs: false,
              Echo: false,
              Stop: false,
              PresencePenalty: false,
              FrequencyPenalty: false,
              BestOf: false,
              LogitBias: false,
              User: false,
            },
          },
          createdAt: '2024-10-17T05:01:10.874053Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.874053Z',
          updatedBy: 'ILAdx4p1C7Jf',
          editedBy: [
            {
              userID: 'ILAdx4p1C7Jf',
              nickname: 'peterjaberau',
              email: 'peterjaberau@gmail.com',
              avatar: '',
              editedAt: '2024-10-17T05:01:10.874021274Z',
            },
          ],
        },
        {
          aiAgentID: 'ILAfx4p1C7J4',
          uid: '52c46e66-f573-4de0-a847-2a1e1519a308',
          teamID: 'ILAgx4p1C7CH',
          teamName: 'private',
          teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          teamIdentifier: 'private',
          name: 'brief',
          model: 1,
          agentType: 1,
          publishedToMarketplace: false,
          icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
          description: 'brief',
          prompt: 'Write a brief within160 characters about {{name}}',
          variables: [
            {
              key: 'name',
              value: 'test',
              defaultValue: '',
            },
          ],
          modelConfig: {
            suffix: '',
            maxTokens: 2048,
            temperature: 1,
            top_p: 0,
            n: 0,
            stream: true,
            logprobs: 0,
            echo: false,
            Stop: null,
            presence_penalty: 0,
            frequency_penalty: 0,
            best_of: 0,
            logit_bias: null,
            user: '',
            SettedMap: {
              Suffix: false,
              MaxTokens: true,
              Temperature: true,
              TopP: false,
              N: false,
              Stream: true,
              Logprobs: false,
              Echo: false,
              Stop: false,
              PresencePenalty: false,
              FrequencyPenalty: false,
              BestOf: false,
              LogitBias: false,
              User: false,
            },
          },
          createdAt: '2024-10-17T05:01:10.850864Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T05:01:10.850865Z',
          updatedBy: 'ILAdx4p1C7Jf',
          editedBy: [
            {
              userID: 'ILAdx4p1C7Jf',
              nickname: 'peterjaberau',
              email: 'peterjaberau@gmail.com',
              avatar: '',
              editedAt: '2024-10-17T05:01:10.850836844Z',
            },
          ],
        },
        {
          aiAgentID: 'ILAfx4p1C7J5',
          uid: '9ddb1bfd-6fd7-4028-97b8-2d59d3fe70c4',
          teamID: 'ILAgx4p1C7CH',
          teamName: 'private',
          teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          teamIdentifier: 'private',
          name: 'brief',
          model: 1,
          agentType: 1,
          publishedToMarketplace: false,
          icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
          description: 'brief',
          prompt: 'Write a brief within160 characters about {{name}}',
          variables: [
            {
              key: 'name',
              value: 'test',
              defaultValue: '',
            },
          ],
          modelConfig: {
            suffix: '',
            maxTokens: 2048,
            temperature: 1,
            top_p: 0,
            n: 0,
            stream: true,
            logprobs: 0,
            echo: false,
            Stop: null,
            presence_penalty: 0,
            frequency_penalty: 0,
            best_of: 0,
            logit_bias: null,
            user: '',
            SettedMap: {
              Suffix: false,
              MaxTokens: true,
              Temperature: true,
              TopP: false,
              N: false,
              Stream: true,
              Logprobs: false,
              Echo: false,
              Stop: false,
              PresencePenalty: false,
              FrequencyPenalty: false,
              BestOf: false,
              LogitBias: false,
              User: false,
            },
          },
          createdAt: '2024-10-17T03:57:34.729723Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T03:57:34.729723Z',
          updatedBy: 'ILAdx4p1C7Jf',
          editedBy: [
            {
              userID: 'ILAdx4p1C7Jf',
              nickname: 'peterjaberau',
              email: 'peterjaberau@gmail.com',
              avatar: '',
              editedAt: '2024-10-17T03:57:34.72969552Z',
            },
          ],
        },
        {
          aiAgentID: 'ILAfx4p1C7Ka',
          uid: 'c44e091f-11de-4d50-9af7-e426f174d93d',
          teamID: 'ILAgx4p1C7CH',
          teamName: 'private',
          teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          teamIdentifier: 'private',
          name: 'brief',
          model: 1,
          agentType: 1,
          publishedToMarketplace: false,
          icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-7a231a9a-2074-4a64-8edf-fe79eb06fe7b/system/icon/f5af9ae7-4ed1-46ec-ba4a-8ff96f912bec.png',
          description: 'brief',
          prompt: 'Write a brief within160 characters about {{name}}',
          variables: [
            {
              key: 'name',
              value: 'test',
              defaultValue: '',
            },
          ],
          modelConfig: {
            suffix: '',
            maxTokens: 2048,
            temperature: 1,
            top_p: 0,
            n: 0,
            stream: true,
            logprobs: 0,
            echo: false,
            Stop: null,
            presence_penalty: 0,
            frequency_penalty: 0,
            best_of: 0,
            logit_bias: null,
            user: '',
            SettedMap: {
              Suffix: false,
              MaxTokens: true,
              Temperature: true,
              TopP: false,
              N: false,
              Stream: true,
              Logprobs: false,
              Echo: false,
              Stop: false,
              PresencePenalty: false,
              FrequencyPenalty: false,
              BestOf: false,
              LogitBias: false,
              User: false,
            },
          },
          createdAt: '2024-10-17T03:57:34.706804Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-10-17T03:57:34.706804Z',
          updatedBy: 'ILAdx4p1C7Jf',
          editedBy: [
            {
              userID: 'ILAdx4p1C7Jf',
              nickname: 'peterjaberau',
              email: 'peterjaberau@gmail.com',
              avatar: '',
              editedAt: '2024-10-17T03:57:34.7067787Z',
            },
          ],
        },
        {
          aiAgentID: 'ILAgx4p1C7yF',
          uid: 'a6bfd40b-b321-4553-aa81-2387f21371ef',
          teamID: 'ILAgx4p1C7CH',
          teamName: 'private',
          teamIcon: 'https://illa-cloud-storage.illacloud.com/system-assets/images/people.png',
          teamIdentifier: 'private',
          name: 'Pedro Duarte',
          model: 1,
          agentType: 1,
          publishedToMarketplace: false,
          icon: 'https://sfo3.digitaloceanspaces.com/illa-cloud-team-storage.illacloud.com/team-68c63670-7de2-406a-a320-80b560e3ed80/system/icon/8f559d26-825b-4bcf-aeec-04a1b30d007f.png',
          description: 'agent desc',
          prompt: 'hello agent',
          variables: [],
          modelConfig: {
            suffix: '',
            maxTokens: 0,
            temperature: 1,
            top_p: 0,
            n: 0,
            stream: true,
            logprobs: 0,
            echo: false,
            Stop: null,
            presence_penalty: 0,
            frequency_penalty: 0,
            best_of: 0,
            logit_bias: null,
            user: '',
            SettedMap: {
              Suffix: false,
              MaxTokens: true,
              Temperature: true,
              TopP: false,
              N: false,
              Stream: true,
              Logprobs: false,
              Echo: false,
              Stop: false,
              PresencePenalty: false,
              FrequencyPenalty: false,
              BestOf: false,
              LogitBias: false,
              User: false,
            },
          },
          createdAt: '2024-08-05T20:13:35.190012Z',
          createdBy: 'ILAdx4p1C7Jf',
          updatedAt: '2024-08-05T20:13:53.98462Z',
          updatedBy: 'ILAdx4p1C7Jf',
          editedBy: [
            {
              userID: 'ILAdx4p1C7Jf',
              nickname: 'peterjaberau',
              email: 'peterjaberau@gmail.com',
              avatar: '',
              editedAt: '2024-08-05T20:13:53.984592781Z',
            },
          ],
        },
      ],
    },
  },
};

export const dataAppState = {
  editor: {
    withPageState: {
      builderInfo: {
        version: '4.8.3',
        language: 'English',
      },
      currentUserInfo: {
        userID: 'ILAfx4p1C7dZ',
        nickname: 'root',
        email: 'root',
        language: 'en-US',
        createdAt: '2024-10-17T04:43:25.519489Z',
        updatedAt: '2024-10-17T04:44:07.468633Z',
      },
      urlParams: {
        query: {},
        url: 'http://localhost:3000/0/app/ILAfx4p1C7dV',
        appURL: 'http://localhost:3000/0/app/ILAfx4p1C7dV',
      },
      localStorage: {},
      currentPageInfo: {
        pagePath: 'page1',
        $dynamicAttrPaths: ['pagePath', 'subPagePath'],
      },
      pageInfos: [
        {
          pagePath: '/page1',
          subPagePath: '/page1/sub-page1',
          pageName: 'page1',
          subPageName: 'sub-page1',
          isHomePage: true,
          subPageGroup: '',
        },
      ],
      input1: {
        value: '{{}}',
        defaultValue: '{{}}',
        label: 'Label',
        labelAlign: 'left',
        labelPosition: 'left',
        labelWidth: 33,
        colorScheme: 'blue',
        hidden: false,
        formDataKey: 'input1',
        placeholder: 'input sth',
        $dynamicAttrPaths: ['labelWidth', 'formDataKey', 'showVisibleButton', 'defaultValue'],
        type: 'input',
        showVisibleButton: true,
        displayName: 'input1',
        $parentNode: 'bodySection1-bodySectionContainer1',
        $type: 'WIDGET',
        $widgetType: 'INPUT_WIDGET',
        $childrenNode: [],
        $parentPageName: 'page1',
        $validationPaths: {
          type: 'String',
          defaultValue: 'String',
          placeholder: 'String',
          label: 'String',
          labelCaption: 'String',
          labelWidth: 'Number',
          disabled: 'Boolean',
          readOnly: 'Boolean',
          showVisibleButton: 'Boolean',
          allowClear: 'Boolean',
          showCharacterCount: 'Boolean',
          prefixText: 'String',
          suffixText: 'String',
          tooltipText: 'String',
          required: 'Boolean',
          regex: 'String',
          maxLength: 'Number',
          minLength: 'Number',
          customRule: 'String',
          hideValidationMessage: 'Boolean',
          formDataKey: 'String',
          hidden: 'Boolean',
        },
      },
    },
    withTempState: {
      transformer1: {
        $actionID: 'ILAfx4p1C7dZ',
        $resourceID: 'ILAfx4p1C7d0',
        displayName: 'transformer1',
        actionType: 'transformer',
        $type: 'ACTION',
        $dynamicAttrPaths: ['value'],
        value: 5,
        $context: {
          '(function (){// Tip: assign your external references to variables instead of chaining off the curly brackets.\nreturn 5})()': 5,
        },
      },
      dataGrid1: {
        $dynamicAttrPaths: ['dataSourceJS'],
        columns: [
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'id',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'id',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'name',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'name',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'email',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'email',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'type',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'type',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'age',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'age',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: 'paid',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: 'paid',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
          {
            aggregable: true,
            columnType: 'auto',
            description: '',
            disableReorder: false,
            field: '$uniqueID',
            filterable: true,
            groupable: true,
            headerAlign: 'left',
            headerName: '$uniqueID',
            hideable: true,
            isCalc: true,
            pinnable: true,
            resizable: true,
            sortable: true,
            width: 170,
          },
        ],
        dataSource: [],
        dataSourceJS: [
          {
            id: 1,
            name: 'Elvera Sleite',
            email: 'hboshers50@narod.ru',
            type: 'product manager',
            age: 30,
            paid: true,
          },
          {
            id: 2,
            name: 'Richardo Durrett',
            email: 'mhamsleyt@ask.com',
            type: 'UX/UI',
            age: 18,
            paid: false,
          },
          {
            id: 3,
            name: 'Ellwood Halsted',
            email: 'amccardle5h@godaddy.com',
            type: 'designer',
            age: 14,
            paid: true,
          },
          {
            id: 4,
            name: 'Tyson Anersen',
            email: 'hstrettell3c@list-manage.com',
            type: 'UX/UI',
            age: 32,
            paid: true,
          },
          {
            id: 5,
            name: 'Tobey Mordy',
            email: 'gfraschetti54@independent.co.uk',
            type: 'designer',
            age: 22,
            paid: true,
          },
          {
            id: 6,
            name: 'Leena Stovine',
            email: 'prawlingson4w@phoca.cz',
            type: 'designer',
            age: 17,
            paid: false,
          },
          {
            id: 7,
            name: 'Erinn Olenchenko',
            email: 'cmeddows1q@aboutads.info',
            type: 'UX/UI',
            age: 17,
            paid: false,
          },
          {
            id: 8,
            name: 'Jilly Aldiss',
            email: 'radamik2b@hubpages.com',
            type: 'marketing',
            age: 22,
            paid: false,
          },
          {
            id: 9,
            name: 'Erinn Reasce',
            email: 'aduckeru@scribd.com',
            type: 'designer',
            age: 24,
            paid: false,
          },
          {
            id: 10,
            name: 'Sargent Guy',
            email: 'jmaccafferky57@archive.org',
            type: 'marketing',
            age: 19,
            paid: false,
          },
          {
            id: 11,
            name: 'Gay Craiker',
            email: 'ddurrett42@yahoo.com',
            type: ['UX/UI', 'designer'],
            age: 27,
            paid: false,
          },
          {
            id: 12,
            name: 'Piper Sorey',
            email: 'dscanterburyx@topsy.com',
            type: 'designer',
            age: 25,
            paid: true,
          },
          {
            id: 13,
            name: 'Renato Benjefield',
            email: 'dmayfield27@seattletimes.com',
            type: 'marketing',
            age: 27,
            paid: true,
          },
          {
            id: 14,
            name: 'Adelind Loache',
            email: 'vhessel2w@sciencedirect.com',
            type: ['designer', 'UX/UI'],
            age: 14,
            paid: true,
          },
          {
            id: 15,
            name: 'Pepi Corssen',
            email: 'bfifield2v@amazonaws.com',
            type: ['product manager', 'designer'],
            age: 27,
            paid: false,
          },
        ],
        dataSourceMode: 'dynamic',
        enablePagination: false,
        excludeHiddenColumns: true,
        sortOrder: 'default',
        displayName: 'dataGrid1',
        $parentNode: 'bodySection1-bodySectionContainer1',
        $type: 'WIDGET',
        $widgetType: 'DATA_GRID_WIDGET',
        $childrenNode: [],
        $parentPageName: 'page1',
        $validationPaths: {
          loading: 'Boolean',
          primaryKey: 'String',
          sortKey: 'String',
          rowSelection: 'Boolean',
          enablePagination: 'Boolean',
          enableServerSidePagination: 'Boolean',
          totalRowCount: 'Number',
          pageSize: 'Number',
          page: 'Number',
          pageSizeOptions: 'Array',
          densitySetting: 'Boolean',
          columnSetting: 'Boolean',
          refreshSetting: 'Boolean',
          exportSetting: 'Boolean',
          exportAllSetting: 'Boolean',
          filterSetting: 'Boolean',
          quickFilterSetting: 'Boolean',
          excludeHiddenColumns: 'Boolean',
        },
        pageSize: 5,
        page: 0,
        selectedRowsPrimaryKeys: [],
        selectedRows: [],
      },
      container1: {
        $dynamicAttrPaths: [],
        backgroundColor: '#ffffffff',
        currentIndex: 0,
        currentKey: 'View 1',
        dynamicHeight: 'auto',
        padding: {
          mode: 'all',
          size: '24',
        },
        radius: '4px',
        resizeDirection: 'HORIZONTAL',
        shadow: 'small',
        viewList: [
          {
            id: '391bfe4b-70d0-4c27-b75f-1b117031e923',
            key: 'View 1',
            label: 'View 1',
          },
          {
            id: '6c97c982-877a-46f7-ad30-94d8b7979c15',
            key: 'View 2',
            label: 'View 2',
          },
          {
            id: 'c77e6a30-652e-425d-90b8-f7a36145f8e4',
            key: 'View 3',
            label: 'View 3',
          },
        ],
        displayName: 'container1',
        $parentNode: 'bodySection1-bodySectionContainer1',
        $type: 'WIDGET',
        $widgetType: 'CONTAINER_WIDGET',
        $childrenNode: ['canvas1', 'canvas2', 'canvas3'],
        $parentPageName: 'page1',
        $validationPaths: {
          viewList: [
            {
              key: 'String',
              label: 'String',
              disabled: 'Boolean',
              hidden: 'Boolean',
            },
            {
              key: 'String',
              label: 'String',
              disabled: 'Boolean',
              hidden: 'Boolean',
            },
            {
              key: 'String',
              label: 'String',
              disabled: 'Boolean',
              hidden: 'Boolean',
            },
          ],
          tooltipText: 'String',
        },
      },
      button1: {
        $dynamicAttrPaths: [],
        colorScheme: 'blue',
        events: [
          {
            eventType: 'click',
            id: 'events-36330e2e-e37d-48e9-b77c-09ec25ea768d',
            method: 'trigger',
            targetId: 'query1',
            type: 'datasource',
          },
          {
            actionType: 'datasource',
            eventType: 'click',
            id: 'events-02f78d57-925c-4791-b1a9-890aae2d5d90',
          },
        ],
        hidden: false,
        text: 'Button {{container1.backgroundColor}}.',
        variant: 'fill',
        displayName: 'button1',
        $parentNode: 'canvas1',
        $type: 'WIDGET',
        $widgetType: 'BUTTON_WIDGET',
        $childrenNode: [],
        $parentPageName: 'page1',
        $validationPaths: {
          text: 'String',
          events: [
            {
              widgetSwitchTargetValue: 'Boolean',
              pageIndex: 'Number',
              sortKey: 'String',
              sortOrder: 'String',
              filters: 'Array',
              operator: 'String',
              disabled: 'Boolean',
              script: 'String',
              url: 'String',
              newTab: 'Boolean',
              key: 'String',
              index: 'Number',
              showNextViewLoopBack: 'Boolean',
              showNextVisibleViewLoopBack: 'Boolean',
              showPreviousViewLoopBack: 'Boolean',
              showPreviousVisibleViewLoopBack: 'Boolean',
              title: 'String',
              description: 'String',
              pagePath: 'String',
              viewPath: 'String',
              duration: 'Number',
              fileName: 'String',
              fileType: 'String',
              enabled: 'Boolean',
              widgetTargetValue: 'String',
            },
            {
              widgetSwitchTargetValue: 'Boolean',
              pageIndex: 'Number',
              sortKey: 'String',
              sortOrder: 'String',
              filters: 'Array',
              operator: 'String',
              disabled: 'Boolean',
              script: 'String',
              url: 'String',
              newTab: 'Boolean',
              key: 'String',
              index: 'Number',
              showNextViewLoopBack: 'Boolean',
              showNextVisibleViewLoopBack: 'Boolean',
              showPreviousViewLoopBack: 'Boolean',
              showPreviousVisibleViewLoopBack: 'Boolean',
              title: 'String',
              description: 'String',
              pagePath: 'String',
              viewPath: 'String',
              duration: 'Number',
              fileName: 'String',
              fileType: 'String',
              enabled: 'Boolean',
              widgetTargetValue: 'String',
            },
          ],
          loading: 'Boolean',
          disabled: 'Boolean',
          tooltipText: 'String',
          hidden: 'Boolean',
        },
      },
      builderInfo: {
        version: '4.8.3',
        language: 'English',
      },
      currentUserInfo: {
        userID: 'ILAfx4p1C7dZ',
        nickname: 'root',
        email: 'root',
        language: 'en-US',
        createdAt: '2024-10-17T04:43:25.519489Z',
        updatedAt: '2024-10-17T04:44:07.468633Z',
      },
      globalData: {
        $dynamicAttrPaths: [],
      },
      urlParams: {
        query: {},
        url: 'http://localhost:3000/0/app/ILAfx4p1C7dZ',
        appURL: 'http://localhost:3000/0/app/ILAfx4p1C7dZ',
      },
      localStorage: {},
      currentPageInfo: {
        pagePath: 'page1',
        $dynamicAttrPaths: ['pagePath', 'subPagePath'],
      },
      pageInfos: [
        {
          pagePath: '/page1',
          subPagePath: '/page1/sub-page1',
          pageName: 'page1',
          subPageName: 'sub-page1',
          isHomePage: true,
          subPageGroup: '',
        },
      ],
    },
    withLogicState: {
      builderInfo: {
        version: '4.8.3',
        language: 'English',
      },
      currentUserInfo: {
        userID: 'ILAfx4p1C7dZ',
        nickname: 'root',
        email: 'root',
        language: 'en-US',
        createdAt: '2024-10-17T04:43:25.519489Z',
        updatedAt: '2024-10-17T04:44:07.468633Z',
      },
      urlParams: {
        query: {},
        url: 'http://localhost:3000/0/app/ILAfx4p1C7dV',
        appURL: 'http://localhost:3000/0/app/ILAfx4p1C7dV',
      },
      localStorage: {},
      currentPageInfo: {
        pagePath: 'page1',
      },
      pageInfos: [
        {
          pagePath: '/page1',
          subPagePath: '/page1/sub-page1',
          pageName: 'page1',
          subPageName: 'sub-page1',
          isHomePage: true,
          subPageGroup: '',
        },
      ],
      input1: {
        value: '{{}}',
        defaultValue: '{{}}',
        label: 'Label',
        labelAlign: 'left',
        labelPosition: 'left',
        labelWidth: 33,
        colorScheme: 'blue',
        hidden: false,
        formDataKey: 'input1',
        placeholder: 'input sth',
        type: 'input',
        showVisibleButton: true,
        displayName: 'input1',
      },
    },
    withGlobalState: {},
    autoCompletionScenario: {
      scopeOfAutoComplete: 'page',
      value: '{{input1.displayName}}',
      showLineNumbers: false,
      expectValueType: 'String',
      lang: 'javascript',
      maxHeight: '208px',
      maxWidth: '100%',
      codeType: 'EXPRESSION',
      modalTitle: 'Form Data Key',
      modalDescription: 'Specify a key of a wrapping form component when constructing the data attribute.',
    },
    stringSnippetsScenario: [
      {
        value: '{{input1.displayName}}',
        hasError: false,
      },
    ],
  },

  components: {
    codeEditor: { ...baseComponents.codeEditor },
    tryCodeEditor: {
      contentKey: 'withPageState',
      ...baseComponents.codeEditor,
    },
  },
};

export const dataServices = {};

export const dataPresets = {};
